-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity knn_train_19_rom is 
    generic(
             DWIDTH     : integer := 8; 
             AWIDTH     : integer := 13; 
             MEM_SIZE    : integer := 6000
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of knn_train_19_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 1=> "00000000", 2 => "00000001", 3 to 64=> "00000000", 65 => "10000000", 
    66 to 113=> "00000000", 114 => "10000000", 115 to 120=> "00000000", 121 => "10000000", 
    122 to 145=> "00000000", 146 => "10000000", 147 to 155=> "00000000", 156 => "10000000", 
    157 to 184=> "00000000", 185 => "00000001", 186 to 213=> "00000000", 214 => "00000001", 
    215 to 249=> "00000000", 250 => "00000001", 251 to 259=> "00000000", 260 => "10000000", 
    261 to 282=> "00000000", 283 => "10000000", 284 to 416=> "00000000", 417 => "10000000", 
    418 to 425=> "00000000", 426 => "00000001", 427 to 452=> "00000000", 453 => "10000000", 
    454 to 462=> "00000000", 463 => "10000000", 464 to 467=> "00000000", 468 => "00000001", 
    469 to 482=> "00000000", 483 => "10000000", 484 => "00000000", 485 => "11000000", 
    486 to 488=> "00000000", 489 => "10000000", 490 to 498=> "00000000", 499 => "11100000", 
    500 to 522=> "00000000", 523 => "10000000", 524 to 530=> "00000000", 531 => "11000000", 
    532 to 570=> "00000000", 571 => "10000000", 572 to 604=> "00000000", 605 => "10000000", 
    606 => "00000001", 607 to 614=> "00000000", 615 => "10000000", 616 to 631=> "00000000", 
    632 => "00000001", 633 to 639=> "00000000", 640 => "00000001", 641 to 666=> "00000000", 
    667 => "10000000", 668 to 728=> "00000000", 729 => "10000000", 730 to 732=> "00000000", 
    733 => "10000000", 734 to 755=> "00000000", 756 => "10000000", 757 to 769=> "00000000", 
    770 => "10000000", 771 to 830=> "00000000", 831 => "10000000", 832 to 878=> "00000000", 
    879 => "11000000", 880 to 882=> "00000000", 883 => "00000001", 884 to 895=> "00000000", 
    896 => "11000000", 897 to 903=> "00000000", 904 => "00000001", 905 to 907=> "00000000", 
    908 => "00000001", 909 to 912=> "00000000", 913 => "10000000", 914 => "00000000", 
    915 => "11000000", 916 to 920=> "00000000", 921 => "11000000", 922 => "00000000", 
    923 => "10000000", 924 to 932=> "00000000", 933 => "00000011", 934 => "00000000", 
    935 => "10000000", 936 to 946=> "00000000", 947 => "11000000", 948 to 970=> "00000000", 
    971 => "00000010", 972 to 993=> "00000000", 994 => "00000001", 995 => "10000000", 
    996 to 1022=> "00000000", 1023 => "00000001", 1024 to 1042=> "00000000", 1043 => "10000000", 
    1044 to 1046=> "00000000", 1047 => "11000000", 1048 to 1053=> "00000000", 1054 => "00000001", 
    1055 to 1101=> "00000000", 1102 => "10000000", 1103 to 1139=> "00000000", 1140 => "10000000", 
    1141 to 1189=> "00000000", 1190 => "10000000", 1191 to 1214=> "00000000", 1215 => "10000000", 
    1216 to 1218=> "00000000", 1219 => "10000000", 1220 to 1244=> "00000000", 1245 => "11000000", 
    1246 to 1264=> "00000000", 1265 => "10000000", 1266 => "00000000", 1267 => "10000000", 
    1268 to 1282=> "00000000", 1283 => "10000000", 1284 => "00000000", 1285 => "10000000", 
    1286 to 1310=> "00000000", 1311 => "11000000", 1312 => "00000000", 1313 => "11000000", 
    1314 to 1318=> "00000000", 1319 => "11000000", 1320 to 1345=> "00000000", 1346 => "10000000", 
    1347 to 1362=> "00000000", 1363 => "10000000", 1364 to 1379=> "00000000", 1380 => "00000001", 
    1381 to 1383=> "00000000", 1384 => "11000000", 1385 => "00000000", 1386 => "10000000", 
    1387 to 1415=> "00000000", 1416 => "00000111", 1417 to 1432=> "00000000", 1433 => "11000000", 
    1434 to 1478=> "00000000", 1479 => "10000000", 1480 => "00000000", 1481 => "11100000", 
    1482 to 1488=> "00000000", 1489 => "10000000", 1490 to 1494=> "00000000", 1495 => "10000000", 
    1496 to 1500=> "00000000", 1501 => "10000000", 1502 to 1504=> "00000000", 1505 => "10000000", 
    1506 to 1534=> "00000000", 1535 => "01000000", 1536 to 1589=> "00000000", 1590 => "10000000", 
    1591 to 1592=> "00000000", 1593 => "10000000", 1594 to 1615=> "00000000", 1616 => "10000000", 
    1617 to 1651=> "00000000", 1652 => "00000001", 1653 to 1661=> "00000000", 1662 => "10000000", 
    1663 to 1677=> "00000000", 1678 => "10000000", 1679 to 1689=> "00000000", 1690 => "11000000", 
    1691 to 1701=> "00000000", 1702 => "11000000", 1703 to 1722=> "00000000", 1723 => "10000000", 
    1724 => "00000000", 1725 => "10000000", 1726 to 1758=> "00000000", 1759 => "10000000", 
    1760 to 1775=> "00000000", 1776 => "10000000", 1777 to 1792=> "00000000", 1793 => "10000000", 
    1794 to 1796=> "00000000", 1797 to 1798=> "10000000", 1799 to 1803=> "00000000", 1804 => "10000000", 
    1805 to 1818=> "00000000", 1819 => "10000000", 1820 to 1839=> "00000000", 1840 => "00000001", 
    1841 to 1850=> "00000000", 1851 => "00000001", 1852 to 1864=> "00000000", 1865 => "00000001", 
    1866 to 1867=> "00000000", 1868 => "10000000", 1869 to 1872=> "00000000", 1873 => "10000000", 
    1874 to 1875=> "00000000", 1876 => "10000000", 1877 to 1955=> "00000000", 1956 => "10000000", 
    1957 to 2008=> "00000000", 2009 => "10000000", 2010 to 2076=> "00000000", 2077 => "11000000", 
    2078 to 2125=> "00000000", 2126 => "11000000", 2127 to 2132=> "00000000", 2133 => "00000011", 
    2134 to 2243=> "00000000", 2244 => "00000001", 2245 to 2348=> "00000000", 2349 => "10000000", 
    2350 to 2352=> "00000000", 2353 => "10000000", 2354 to 2366=> "00000000", 2367 => "10000000", 
    2368 to 2372=> "00000000", 2373 => "10000000", 2374 to 2379=> "00000000", 2380 => "00000001", 
    2381 => "10000000", 2382 to 2399=> "00000000", 2400 => "10000000", 2401 to 2402=> "00000000", 
    2403 => "10000000", 2404 to 2412=> "00000000", 2413 => "10000000", 2414 to 2416=> "00000000", 
    2417 => "10000000", 2418 to 2420=> "00000000", 2421 => "10000000", 2422 to 2424=> "00000000", 
    2425 => "11000000", 2426 to 2472=> "00000000", 2473 => "10000000", 2474 to 2482=> "00000000", 
    2483 to 2484=> "10000000", 2485 to 2531=> "00000000", 2532 => "10000000", 2533 to 2539=> "00000000", 
    2540 => "00000001", 2541 to 2547=> "00000000", 2548 => "00000111", 2549 to 2556=> "00000000", 
    2557 => "10000000", 2558 to 2587=> "00000000", 2588 => "10000000", 2589 to 2605=> "00000000", 
    2606 => "10000000", 2607 to 2638=> "00000000", 2639 => "10000000", 2640 to 2649=> "00000000", 
    2650 => "00000011", 2651 to 2712=> "00000000", 2713 => "11000000", 2714 to 2742=> "00000000", 
    2743 => "00000011", 2744 to 2749=> "00000000", 2750 => "00000111", 2751 to 2753=> "00000000", 
    2754 => "00000001", 2755 to 2778=> "00000000", 2779 => "10000000", 2780 to 2813=> "00000000", 
    2814 => "00000001", 2815 to 2816=> "00000000", 2817 => "10000000", 2818 => "00000000", 
    2819 => "10000000", 2820 to 2834=> "00000000", 2835 => "00000001", 2836 to 2841=> "00000000", 
    2842 => "11000000", 2843 to 2858=> "00000000", 2859 => "10000000", 2860 to 2866=> "00000000", 
    2867 => "00000001", 2868 to 2880=> "00000000", 2881 => "00000011", 2882 to 2898=> "00000000", 
    2899 => "10000000", 2900 => "00000000", 2901 => "10000000", 2902 to 3014=> "00000000", 
    3015 => "10000000", 3016 to 3024=> "00000000", 3025 => "10000000", 3026 to 3034=> "00000000", 
    3035 => "10000000", 3036 to 3065=> "00000000", 3066 to 3067=> "10000000", 3068 to 3094=> "00000000", 
    3095 => "11000000", 3096 to 3105=> "00000000", 3106 => "10000000", 3107 to 3172=> "00000000", 
    3173 => "10000000", 3174 to 3183=> "00000000", 3184 => "11000000", 3185 to 3197=> "00000000", 
    3198 => "10000000", 3199 to 3245=> "00000000", 3246 => "00000011", 3247 to 3325=> "00000000", 
    3326 => "11000000", 3327 => "00000000", 3328 => "10000000", 3329 to 3355=> "00000000", 
    3356 => "10000000", 3357 to 3375=> "00000000", 3376 => "10000000", 3377 to 3390=> "00000000", 
    3391 => "10000000", 3392 to 3408=> "00000000", 3409 => "10000000", 3410 to 3441=> "00000000", 
    3442 => "00000111", 3443 to 3452=> "00000000", 3453 => "11000000", 3454 to 3562=> "00000000", 
    3563 => "10000000", 3564 => "00000000", 3565 => "10000000", 3566 to 3574=> "00000000", 
    3575 => "10000000", 3576 to 3584=> "00000000", 3585 => "10000000", 3586 to 3602=> "00000000", 
    3603 => "10000000", 3604 to 3619=> "00000000", 3620 => "00000001", 3621 to 3629=> "00000000", 
    3630 => "10000000", 3631 to 3657=> "00000000", 3658 => "10000000", 3659 to 3667=> "00000000", 
    3668 => "11000000", 3669 to 3687=> "00000000", 3688 => "10000000", 3689 to 3699=> "00000000", 
    3700 => "10000000", 3701 to 3723=> "00000000", 3724 => "10000000", 3725 to 3756=> "00000000", 
    3757 => "10000000", 3758 to 3775=> "00000000", 3776 to 3777=> "10000000", 3778 to 3794=> "00000000", 
    3795 => "00000001", 3796 to 3863=> "00000000", 3864 => "11100000", 3865 to 3871=> "00000000", 
    3872 => "10000000", 3873 to 3887=> "00000000", 3888 => "10000000", 3889 to 3893=> "00000000", 
    3894 => "00000001", 3895 to 3950=> "00000000", 3951 => "10000000", 3952 to 4074=> "00000000", 
    4075 => "10000000", 4076 => "00000000", 4077 => "11000000", 4078 to 4082=> "00000000", 
    4083 => "10000000", 4084 to 4103=> "00000000", 4104 => "11000000", 4105 to 4164=> "00000000", 
    4165 => "10000000", 4166 to 4199=> "00000000", 4200 => "00000001", 4201 to 4204=> "00000000", 
    4205 => "10000000", 4206 to 4225=> "00000000", 4226 => "00000001", 4227 => "00000000", 
    4228 => "00000001", 4229 to 4253=> "00000000", 4254 => "00000001", 4255 to 4269=> "00000000", 
    4270 => "10000000", 4271 to 4278=> "00000000", 4279 => "10000000", 4280 to 4346=> "00000000", 
    4347 => "10000000", 4348 to 4353=> "00000000", 4354 => "00000110", 4355 to 4359=> "00000000", 
    4360 => "10000000", 4361 to 4443=> "00000000", 4444 => "10000000", 4445 to 4451=> "00000000", 
    4452 => "00000001", 4453 to 4454=> "00000000", 4455 => "10000000", 4456 to 4484=> "00000000", 
    4485 => "10000000", 4486 to 4504=> "00000000", 4505 => "10000000", 4506 to 4527=> "00000000", 
    4528 => "10000000", 4529 to 4534=> "00000000", 4535 => "10000000", 4536 to 4570=> "00000000", 
    4571 => "00000001", 4572 to 4579=> "00000000", 4580 => "10000000", 4581 to 4596=> "00000000", 
    4597 => "10000000", 4598 to 4652=> "00000000", 4653 => "10000000", 4654 to 4681=> "00000000", 
    4682 => "10000000", 4683 to 4694=> "00000000", 4695 => "10000000", 4696 to 4760=> "00000000", 
    4761 => "10000000", 4762 to 4784=> "00000000", 4785 => "00000001", 4786 to 4836=> "00000000", 
    4837 => "00000001", 4838 to 4874=> "00000000", 4875 => "00000001", 4876 to 4887=> "00000000", 
    4888 => "00000011", 4889 to 4905=> "00000000", 4906 => "10000000", 4907 to 4908=> "00000000", 
    4909 => "10000000", 4910 to 4925=> "00000000", 4926 to 4927=> "10000000", 4928 to 4939=> "00000000", 
    4940 => "11000000", 4941 => "10000000", 4942 to 4946=> "00000000", 4947 => "10000000", 
    4948 to 4966=> "00000000", 4967 => "10000000", 4968 to 4999=> "00000000", 5000 => "00000011", 
    5001 to 5028=> "00000000", 5029 => "11000000", 5030 to 5044=> "00000000", 5045 => "10000000", 
    5046 to 5084=> "00000000", 5085 => "10000000", 5086 to 5090=> "00000000", 5091 => "11000000", 
    5092 to 5115=> "00000000", 5116 => "11000000", 5117 => "10000000", 5118 => "00000000", 
    5119 => "11000000", 5120 to 5130=> "00000000", 5131 => "10000000", 5132 => "00000000", 
    5133 => "10000000", 5134 to 5181=> "00000000", 5182 => "00000011", 5183 => "01000000", 
    5184 to 5186=> "00000000", 5187 => "10000000", 5188 to 5297=> "00000000", 5298 => "10000000", 
    5299 to 5348=> "00000000", 5349 => "00000001", 5350 to 5352=> "00000000", 5353 => "10000000", 
    5354 to 5372=> "00000000", 5373 => "10000000", 5374 to 5383=> "00000000", 5384 => "10000000", 
    5385 to 5386=> "00000000", 5387 => "00000001", 5388 to 5392=> "00000000", 5393 => "10000000", 
    5394 to 5408=> "00000000", 5409 => "10000000", 5410 to 5413=> "00000000", 5414 => "11100000", 
    5415 to 5429=> "00000000", 5430 => "10000000", 5431 to 5459=> "00000000", 5460 => "11000000", 
    5461 => "10000000", 5462 to 5504=> "00000000", 5505 => "10000000", 5506 to 5511=> "00000000", 
    5512 => "10000000", 5513 to 5582=> "00000000", 5583 => "10000000", 5584 => "00000000", 
    5585 => "10000000", 5586 to 5626=> "00000000", 5627 => "10000000", 5628 to 5651=> "00000000", 
    5652 => "00000011", 5653 to 5660=> "00000000", 5661 => "10000000", 5662 to 5691=> "00000000", 
    5692 => "10000000", 5693 => "00000000", 5694 => "10000000", 5695 to 5718=> "00000000", 
    5719 => "10000000", 5720 to 5807=> "00000000", 5808 => "10000000", 5809 to 5852=> "00000000", 
    5853 => "11000000", 5854 to 5872=> "00000000", 5873 => "10000000", 5874 to 5886=> "00000000", 
    5887 => "10000000", 5888 to 5967=> "00000000", 5968 => "00000001", 5969 to 5974=> "00000000", 
    5975 => "00000001", 5976 to 5977=> "00000000", 5978 => "10000000", 5979 to 5994=> "00000000", 
    5995 => "00000001", 5996 to 5999=> "00000000" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity knn_train_19 is
    generic (
        DataWidth : INTEGER := 8;
        AddressRange : INTEGER := 6000;
        AddressWidth : INTEGER := 13);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of knn_train_19 is
    component knn_train_19_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    knn_train_19_rom_U :  component knn_train_19_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


