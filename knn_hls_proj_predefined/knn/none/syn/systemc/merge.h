// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _merge_HH_
#define _merge_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "merge_L_0.h"

namespace ap_rtl {

struct merge : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > arr_0_address0;
    sc_out< sc_logic > arr_0_ce0;
    sc_out< sc_logic > arr_0_we0;
    sc_out< sc_lv<32> > arr_0_d0;
    sc_in< sc_lv<32> > arr_0_q0;
    sc_out< sc_lv<16> > arr_1_address0;
    sc_out< sc_logic > arr_1_ce0;
    sc_out< sc_logic > arr_1_we0;
    sc_out< sc_lv<32> > arr_1_d0;
    sc_in< sc_lv<32> > arr_1_q0;
    sc_in< sc_lv<32> > l;
    sc_in< sc_lv<32> > m;
    sc_in< sc_lv<32> > r;


    // Module declarations
    merge(sc_module_name name);
    SC_HAS_PROCESS(merge);

    ~merge();

    sc_trace_file* mVcdFile;

    merge_L_0* L_0_U;
    merge_L_0* L_1_U;
    merge_L_0* R_0_U;
    merge_L_0* R_1_U;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > n1_fu_367_p2;
    sc_signal< sc_lv<32> > n1_reg_633;
    sc_signal< sc_lv<32> > n2_fu_373_p2;
    sc_signal< sc_lv<32> > n2_reg_640;
    sc_signal< sc_lv<31> > i_fu_388_p2;
    sc_signal< sc_lv<31> > i_reg_650;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln52_fu_383_p2;
    sc_signal< sc_lv<31> > j_fu_420_p2;
    sc_signal< sc_lv<31> > j_reg_668;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln58_fu_415_p2;
    sc_signal< sc_lv<32> > j_1_load_reg_697;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > i_1_load_reg_703;
    sc_signal< sc_lv<64> > sext_ln71_fu_479_p1;
    sc_signal< sc_lv<64> > sext_ln71_reg_712;
    sc_signal< sc_lv<1> > and_ln69_fu_473_p2;
    sc_signal< sc_lv<64> > sext_ln71_1_fu_484_p1;
    sc_signal< sc_lv<64> > sext_ln71_1_reg_722;
    sc_signal< sc_lv<32> > k_fu_519_p2;
    sc_signal< sc_lv<32> > k_reg_732;
    sc_signal< sc_lv<1> > icmp_ln71_fu_525_p2;
    sc_signal< sc_lv<1> > icmp_ln71_reg_737;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > sext_ln79_fu_531_p1;
    sc_signal< sc_lv<64> > sext_ln79_reg_741;
    sc_signal< sc_lv<32> > add_ln84_fu_556_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > icmp_ln88_fu_562_p2;
    sc_signal< sc_lv<32> > i_4_fu_573_p2;
    sc_signal< sc_lv<32> > i_4_reg_775;
    sc_signal< sc_lv<32> > k_3_fu_585_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > icmp_ln98_fu_591_p2;
    sc_signal< sc_lv<32> > j_4_fu_602_p2;
    sc_signal< sc_lv<32> > j_4_reg_798;
    sc_signal< sc_lv<32> > k_4_fu_614_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<16> > L_0_address0;
    sc_signal< sc_logic > L_0_ce0;
    sc_signal< sc_logic > L_0_we0;
    sc_signal< sc_lv<32> > L_0_q0;
    sc_signal< sc_lv<16> > L_1_address0;
    sc_signal< sc_logic > L_1_ce0;
    sc_signal< sc_logic > L_1_we0;
    sc_signal< sc_lv<32> > L_1_q0;
    sc_signal< sc_lv<16> > R_0_address0;
    sc_signal< sc_logic > R_0_ce0;
    sc_signal< sc_logic > R_0_we0;
    sc_signal< sc_lv<32> > R_0_q0;
    sc_signal< sc_lv<16> > R_1_address0;
    sc_signal< sc_logic > R_1_ce0;
    sc_signal< sc_logic > R_1_we0;
    sc_signal< sc_lv<32> > R_1_q0;
    sc_signal< sc_lv<31> > i_0_reg_288;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<31> > j_0_reg_300;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > indvars_iv_reg_312;
    sc_signal< sc_lv<32> > i_3_reg_322;
    sc_signal< sc_lv<32> > k_1_reg_331;
    sc_signal< sc_lv<32> > j_3_reg_342;
    sc_signal< sc_lv<32> > k_2_reg_351;
    sc_signal< sc_lv<64> > sext_ln54_fu_399_p1;
    sc_signal< sc_lv<64> > zext_ln54_fu_405_p1;
    sc_signal< sc_lv<64> > sext_ln60_fu_435_p1;
    sc_signal< sc_lv<64> > zext_ln60_fu_451_p1;
    sc_signal< sc_lv<16> > arr_1_addr_2_gep_fu_219_p3;
    sc_signal< sc_lv<64> > sext_ln90_fu_567_p1;
    sc_signal< sc_lv<64> > sext_ln90_1_fu_579_p1;
    sc_signal< sc_lv<64> > sext_ln100_fu_596_p1;
    sc_signal< sc_lv<64> > sext_ln100_1_fu_608_p1;
    sc_signal< sc_lv<32> > j_1_fu_52;
    sc_signal< sc_lv<32> > j_2_fu_546_p2;
    sc_signal< sc_lv<32> > i_1_fu_56;
    sc_signal< sc_lv<32> > i_2_fu_536_p2;
    sc_signal< sc_lv<32> > sub_ln44_fu_361_p2;
    sc_signal< sc_lv<32> > zext_ln52_fu_379_p1;
    sc_signal< sc_lv<32> > add_ln54_fu_394_p2;
    sc_signal< sc_lv<32> > zext_ln58_fu_411_p1;
    sc_signal< sc_lv<32> > zext_ln60_1_fu_426_p1;
    sc_signal< sc_lv<32> > add_ln60_1_fu_430_p2;
    sc_signal< sc_lv<32> > icmp_ln69_fu_463_p0;
    sc_signal< sc_lv<32> > icmp_ln69_1_fu_468_p0;
    sc_signal< sc_lv<1> > icmp_ln69_fu_463_p2;
    sc_signal< sc_lv<1> > icmp_ln69_1_fu_468_p2;
    sc_signal< sc_lv<32> > sext_ln71_fu_479_p0;
    sc_signal< sc_lv<32> > sext_ln71_1_fu_484_p0;
    sc_signal< sc_lv<32> > sub_ln88_fu_489_p2;
    sc_signal< sc_lv<32> > empty_fu_499_p0;
    sc_signal< sc_lv<32> > add_ln88_fu_494_p2;
    sc_signal< sc_lv<1> > empty_fu_499_p2;
    sc_signal< sc_lv<32> > smax_fu_505_p1;
    sc_signal< sc_lv<32> > sub_ln88_1_fu_513_p1;
    sc_signal< sc_lv<32> > sub_ln88_1_fu_513_p2;
    sc_signal< sc_lv<32> > smax_fu_505_p3;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<31> ap_const_lv31_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_L_0_address0();
    void thread_L_0_ce0();
    void thread_L_0_we0();
    void thread_L_1_address0();
    void thread_L_1_ce0();
    void thread_L_1_we0();
    void thread_R_0_address0();
    void thread_R_0_ce0();
    void thread_R_0_we0();
    void thread_R_1_address0();
    void thread_R_1_ce0();
    void thread_R_1_we0();
    void thread_add_ln54_fu_394_p2();
    void thread_add_ln60_1_fu_430_p2();
    void thread_add_ln84_fu_556_p2();
    void thread_add_ln88_fu_494_p2();
    void thread_and_ln69_fu_473_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_arr_0_address0();
    void thread_arr_0_ce0();
    void thread_arr_0_d0();
    void thread_arr_0_we0();
    void thread_arr_1_addr_2_gep_fu_219_p3();
    void thread_arr_1_address0();
    void thread_arr_1_ce0();
    void thread_arr_1_d0();
    void thread_arr_1_we0();
    void thread_empty_fu_499_p0();
    void thread_empty_fu_499_p2();
    void thread_i_2_fu_536_p2();
    void thread_i_4_fu_573_p2();
    void thread_i_fu_388_p2();
    void thread_icmp_ln52_fu_383_p2();
    void thread_icmp_ln58_fu_415_p2();
    void thread_icmp_ln69_1_fu_468_p0();
    void thread_icmp_ln69_1_fu_468_p2();
    void thread_icmp_ln69_fu_463_p0();
    void thread_icmp_ln69_fu_463_p2();
    void thread_icmp_ln71_fu_525_p2();
    void thread_icmp_ln88_fu_562_p2();
    void thread_icmp_ln98_fu_591_p2();
    void thread_j_2_fu_546_p2();
    void thread_j_4_fu_602_p2();
    void thread_j_fu_420_p2();
    void thread_k_3_fu_585_p2();
    void thread_k_4_fu_614_p2();
    void thread_k_fu_519_p2();
    void thread_n1_fu_367_p2();
    void thread_n2_fu_373_p2();
    void thread_sext_ln100_1_fu_608_p1();
    void thread_sext_ln100_fu_596_p1();
    void thread_sext_ln54_fu_399_p1();
    void thread_sext_ln60_fu_435_p1();
    void thread_sext_ln71_1_fu_484_p0();
    void thread_sext_ln71_1_fu_484_p1();
    void thread_sext_ln71_fu_479_p0();
    void thread_sext_ln71_fu_479_p1();
    void thread_sext_ln79_fu_531_p1();
    void thread_sext_ln90_1_fu_579_p1();
    void thread_sext_ln90_fu_567_p1();
    void thread_smax_fu_505_p1();
    void thread_smax_fu_505_p3();
    void thread_sub_ln44_fu_361_p2();
    void thread_sub_ln88_1_fu_513_p1();
    void thread_sub_ln88_1_fu_513_p2();
    void thread_sub_ln88_fu_489_p2();
    void thread_zext_ln52_fu_379_p1();
    void thread_zext_ln54_fu_405_p1();
    void thread_zext_ln58_fu_411_p1();
    void thread_zext_ln60_1_fu_426_p1();
    void thread_zext_ln60_fu_451_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
