// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="knn,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xqzu5ev-ffrb900-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.245000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=651,HLS_SYN_DSP=0,HLS_SYN_FF=2330,HLS_SYN_LUT=10425,HLS_VERSION=2020_1}" *)

module knn (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        k,
        test_samples_label_address0,
        test_samples_label_ce0,
        test_samples_label_q0,
        test_samples_data_address0,
        test_samples_data_ce0,
        test_samples_data_q0,
        test_samples_data_address1,
        test_samples_data_ce1,
        test_samples_data_q1,
        train_samples_label_address0,
        train_samples_label_ce0,
        train_samples_label_q0,
        train_samples_data_address0,
        train_samples_data_ce0,
        train_samples_data_q0,
        train_samples_data_address1,
        train_samples_data_ce1,
        train_samples_data_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 113'd1;
parameter    ap_ST_fsm_state2 = 113'd2;
parameter    ap_ST_fsm_state3 = 113'd4;
parameter    ap_ST_fsm_state4 = 113'd8;
parameter    ap_ST_fsm_state5 = 113'd16;
parameter    ap_ST_fsm_state6 = 113'd32;
parameter    ap_ST_fsm_state7 = 113'd64;
parameter    ap_ST_fsm_state8 = 113'd128;
parameter    ap_ST_fsm_state9 = 113'd256;
parameter    ap_ST_fsm_state10 = 113'd512;
parameter    ap_ST_fsm_state11 = 113'd1024;
parameter    ap_ST_fsm_state12 = 113'd2048;
parameter    ap_ST_fsm_state13 = 113'd4096;
parameter    ap_ST_fsm_state14 = 113'd8192;
parameter    ap_ST_fsm_state15 = 113'd16384;
parameter    ap_ST_fsm_state16 = 113'd32768;
parameter    ap_ST_fsm_state17 = 113'd65536;
parameter    ap_ST_fsm_state18 = 113'd131072;
parameter    ap_ST_fsm_state19 = 113'd262144;
parameter    ap_ST_fsm_state20 = 113'd524288;
parameter    ap_ST_fsm_state21 = 113'd1048576;
parameter    ap_ST_fsm_state22 = 113'd2097152;
parameter    ap_ST_fsm_state23 = 113'd4194304;
parameter    ap_ST_fsm_state24 = 113'd8388608;
parameter    ap_ST_fsm_state25 = 113'd16777216;
parameter    ap_ST_fsm_state26 = 113'd33554432;
parameter    ap_ST_fsm_state27 = 113'd67108864;
parameter    ap_ST_fsm_state28 = 113'd134217728;
parameter    ap_ST_fsm_state29 = 113'd268435456;
parameter    ap_ST_fsm_state30 = 113'd536870912;
parameter    ap_ST_fsm_state31 = 113'd1073741824;
parameter    ap_ST_fsm_state32 = 113'd2147483648;
parameter    ap_ST_fsm_state33 = 113'd4294967296;
parameter    ap_ST_fsm_state34 = 113'd8589934592;
parameter    ap_ST_fsm_state35 = 113'd17179869184;
parameter    ap_ST_fsm_state36 = 113'd34359738368;
parameter    ap_ST_fsm_state37 = 113'd68719476736;
parameter    ap_ST_fsm_state38 = 113'd137438953472;
parameter    ap_ST_fsm_state39 = 113'd274877906944;
parameter    ap_ST_fsm_state40 = 113'd549755813888;
parameter    ap_ST_fsm_state41 = 113'd1099511627776;
parameter    ap_ST_fsm_state42 = 113'd2199023255552;
parameter    ap_ST_fsm_state43 = 113'd4398046511104;
parameter    ap_ST_fsm_state44 = 113'd8796093022208;
parameter    ap_ST_fsm_state45 = 113'd17592186044416;
parameter    ap_ST_fsm_state46 = 113'd35184372088832;
parameter    ap_ST_fsm_state47 = 113'd70368744177664;
parameter    ap_ST_fsm_state48 = 113'd140737488355328;
parameter    ap_ST_fsm_state49 = 113'd281474976710656;
parameter    ap_ST_fsm_state50 = 113'd562949953421312;
parameter    ap_ST_fsm_state51 = 113'd1125899906842624;
parameter    ap_ST_fsm_state52 = 113'd2251799813685248;
parameter    ap_ST_fsm_state53 = 113'd4503599627370496;
parameter    ap_ST_fsm_state54 = 113'd9007199254740992;
parameter    ap_ST_fsm_state55 = 113'd18014398509481984;
parameter    ap_ST_fsm_state56 = 113'd36028797018963968;
parameter    ap_ST_fsm_state57 = 113'd72057594037927936;
parameter    ap_ST_fsm_state58 = 113'd144115188075855872;
parameter    ap_ST_fsm_state59 = 113'd288230376151711744;
parameter    ap_ST_fsm_state60 = 113'd576460752303423488;
parameter    ap_ST_fsm_state61 = 113'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 113'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 113'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 113'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 113'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 113'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 113'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 113'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 113'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 113'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 113'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 113'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 113'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 113'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 113'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 113'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 113'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 113'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 113'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 113'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 113'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 113'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 113'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 113'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 113'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 113'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 113'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 113'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 113'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 113'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 113'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 113'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 113'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 113'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 113'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 113'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 113'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 113'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 113'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 113'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 113'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 113'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 113'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 113'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 113'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 113'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 113'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 113'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 113'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 113'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 113'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 113'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 113'd5192296858534827628530496329220096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] k;
output  [13:0] test_samples_label_address0;
output   test_samples_label_ce0;
input  [7:0] test_samples_label_q0;
output  [19:0] test_samples_data_address0;
output   test_samples_data_ce0;
input  [7:0] test_samples_data_q0;
output  [19:0] test_samples_data_address1;
output   test_samples_data_ce1;
input  [7:0] test_samples_data_q1;
output  [15:0] train_samples_label_address0;
output   train_samples_label_ce0;
input  [7:0] train_samples_label_q0;
output  [22:0] train_samples_data_address0;
output   train_samples_data_ce0;
input  [7:0] train_samples_data_q0;
output  [22:0] train_samples_data_address1;
output   train_samples_data_ce1;
input  [7:0] train_samples_data_q1;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg test_samples_label_ce0;
reg[19:0] test_samples_data_address0;
reg test_samples_data_ce0;
reg[19:0] test_samples_data_address1;
reg test_samples_data_ce1;
reg train_samples_label_ce0;
reg[22:0] train_samples_data_address0;
reg train_samples_data_ce0;
reg[22:0] train_samples_data_address1;
reg train_samples_data_ce1;

(* fsm_encoding = "none" *) reg   [112:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] bitcount_address0;
reg    bitcount_ce0;
wire   [3:0] bitcount_q0;
wire   [19:0] add_ln32_1_fu_4151_p2;
reg   [19:0] add_ln32_1_reg_7532;
wire    ap_CS_fsm_state2;
wire   [13:0] i_5_fu_4163_p2;
reg   [13:0] i_5_reg_7540;
wire   [0:0] icmp_ln32_fu_4157_p2;
wire    ap_CS_fsm_state3;
reg   [7:0] test_sample_label_reg_7570;
reg   [7:0] test_samples_data_lo_reg_7575;
reg   [7:0] test_samples_data_lo_1_reg_7580;
wire    ap_CS_fsm_state4;
reg   [7:0] test_samples_data_lo_2_reg_7595;
reg   [7:0] test_samples_data_lo_3_reg_7600;
wire    ap_CS_fsm_state5;
reg   [7:0] test_samples_data_lo_4_reg_7615;
reg   [7:0] test_samples_data_lo_5_reg_7620;
wire    ap_CS_fsm_state6;
reg   [7:0] test_samples_data_lo_6_reg_7635;
reg   [7:0] test_samples_data_lo_7_reg_7640;
wire    ap_CS_fsm_state7;
reg   [7:0] test_samples_data_lo_8_reg_7655;
reg   [7:0] test_samples_data_lo_9_reg_7660;
wire    ap_CS_fsm_state8;
reg   [7:0] test_samples_data_lo_10_reg_7675;
reg   [7:0] test_samples_data_lo_11_reg_7680;
wire    ap_CS_fsm_state9;
reg   [7:0] test_samples_data_lo_12_reg_7695;
reg   [7:0] test_samples_data_lo_13_reg_7700;
wire    ap_CS_fsm_state10;
reg   [7:0] test_samples_data_lo_14_reg_7715;
reg   [7:0] test_samples_data_lo_15_reg_7720;
wire    ap_CS_fsm_state11;
reg   [7:0] test_samples_data_lo_16_reg_7735;
reg   [7:0] test_samples_data_lo_17_reg_7740;
wire    ap_CS_fsm_state12;
reg   [7:0] test_samples_data_lo_18_reg_7755;
reg   [7:0] test_samples_data_lo_19_reg_7760;
wire    ap_CS_fsm_state13;
reg   [7:0] test_samples_data_lo_20_reg_7775;
reg   [7:0] test_samples_data_lo_21_reg_7780;
wire    ap_CS_fsm_state14;
reg   [7:0] test_samples_data_lo_22_reg_7795;
reg   [7:0] test_samples_data_lo_23_reg_7800;
wire    ap_CS_fsm_state15;
reg   [7:0] test_samples_data_lo_24_reg_7815;
reg   [7:0] test_samples_data_lo_25_reg_7820;
wire    ap_CS_fsm_state16;
reg   [7:0] test_samples_data_lo_26_reg_7835;
reg   [7:0] test_samples_data_lo_27_reg_7840;
wire    ap_CS_fsm_state17;
reg   [7:0] test_samples_data_lo_28_reg_7855;
reg   [7:0] test_samples_data_lo_29_reg_7860;
wire    ap_CS_fsm_state18;
reg   [7:0] test_samples_data_lo_30_reg_7875;
reg   [7:0] test_samples_data_lo_31_reg_7880;
wire    ap_CS_fsm_state19;
reg   [7:0] test_samples_data_lo_32_reg_7895;
reg   [7:0] test_samples_data_lo_33_reg_7900;
wire    ap_CS_fsm_state20;
reg   [7:0] test_samples_data_lo_34_reg_7915;
reg   [7:0] test_samples_data_lo_35_reg_7920;
wire    ap_CS_fsm_state21;
reg   [7:0] test_samples_data_lo_36_reg_7935;
reg   [7:0] test_samples_data_lo_37_reg_7940;
wire    ap_CS_fsm_state22;
reg   [7:0] test_samples_data_lo_38_reg_7955;
reg   [7:0] test_samples_data_lo_39_reg_7960;
wire    ap_CS_fsm_state23;
reg   [7:0] test_samples_data_lo_40_reg_7975;
reg   [7:0] test_samples_data_lo_41_reg_7980;
wire    ap_CS_fsm_state24;
reg   [7:0] test_samples_data_lo_42_reg_7995;
reg   [7:0] test_samples_data_lo_43_reg_8000;
wire    ap_CS_fsm_state25;
reg   [7:0] test_samples_data_lo_44_reg_8015;
reg   [7:0] test_samples_data_lo_45_reg_8020;
wire    ap_CS_fsm_state26;
reg   [7:0] test_samples_data_lo_46_reg_8035;
reg   [7:0] test_samples_data_lo_47_reg_8040;
wire    ap_CS_fsm_state27;
reg   [7:0] test_samples_data_lo_48_reg_8055;
reg   [7:0] test_samples_data_lo_49_reg_8060;
wire    ap_CS_fsm_state28;
reg   [7:0] test_samples_data_lo_50_reg_8075;
reg   [7:0] test_samples_data_lo_51_reg_8080;
wire    ap_CS_fsm_state29;
reg   [7:0] test_samples_data_lo_52_reg_8095;
reg   [7:0] test_samples_data_lo_53_reg_8100;
wire    ap_CS_fsm_state30;
reg   [7:0] test_samples_data_lo_54_reg_8115;
reg   [7:0] test_samples_data_lo_55_reg_8120;
wire    ap_CS_fsm_state31;
reg   [7:0] test_samples_data_lo_56_reg_8135;
reg   [7:0] test_samples_data_lo_57_reg_8140;
wire    ap_CS_fsm_state32;
reg   [7:0] test_samples_data_lo_58_reg_8155;
reg   [7:0] test_samples_data_lo_59_reg_8160;
wire    ap_CS_fsm_state33;
reg   [7:0] test_samples_data_lo_60_reg_8175;
reg   [7:0] test_samples_data_lo_61_reg_8180;
wire    ap_CS_fsm_state34;
reg   [7:0] test_samples_data_lo_62_reg_8195;
reg   [7:0] test_samples_data_lo_63_reg_8200;
wire    ap_CS_fsm_state35;
reg   [7:0] test_samples_data_lo_64_reg_8215;
reg   [7:0] test_samples_data_lo_65_reg_8220;
wire    ap_CS_fsm_state36;
reg   [7:0] test_samples_data_lo_66_reg_8235;
reg   [7:0] test_samples_data_lo_67_reg_8240;
wire    ap_CS_fsm_state37;
reg   [7:0] test_samples_data_lo_68_reg_8255;
reg   [7:0] test_samples_data_lo_69_reg_8260;
wire    ap_CS_fsm_state38;
reg   [7:0] test_samples_data_lo_70_reg_8275;
reg   [7:0] test_samples_data_lo_71_reg_8280;
wire    ap_CS_fsm_state39;
reg   [7:0] test_samples_data_lo_72_reg_8295;
reg   [7:0] test_samples_data_lo_73_reg_8300;
wire    ap_CS_fsm_state40;
reg   [7:0] test_samples_data_lo_74_reg_8315;
reg   [7:0] test_samples_data_lo_75_reg_8320;
wire    ap_CS_fsm_state41;
reg   [7:0] test_samples_data_lo_76_reg_8335;
reg   [7:0] test_samples_data_lo_77_reg_8340;
wire    ap_CS_fsm_state42;
reg   [7:0] test_samples_data_lo_78_reg_8355;
reg   [7:0] test_samples_data_lo_79_reg_8360;
wire    ap_CS_fsm_state43;
reg   [7:0] test_samples_data_lo_80_reg_8375;
reg   [7:0] test_samples_data_lo_81_reg_8380;
wire    ap_CS_fsm_state44;
reg   [7:0] test_samples_data_lo_82_reg_8395;
reg   [7:0] test_samples_data_lo_83_reg_8400;
wire    ap_CS_fsm_state45;
reg   [7:0] test_samples_data_lo_84_reg_8415;
reg   [7:0] test_samples_data_lo_85_reg_8420;
wire    ap_CS_fsm_state46;
reg   [7:0] test_samples_data_lo_86_reg_8435;
reg   [7:0] test_samples_data_lo_87_reg_8440;
wire    ap_CS_fsm_state47;
reg   [7:0] test_samples_data_lo_88_reg_8455;
reg   [7:0] test_samples_data_lo_89_reg_8460;
wire    ap_CS_fsm_state48;
reg   [7:0] test_samples_data_lo_90_reg_8475;
reg   [7:0] test_samples_data_lo_91_reg_8480;
wire    ap_CS_fsm_state49;
reg   [7:0] test_samples_data_lo_92_reg_8495;
reg   [7:0] test_samples_data_lo_93_reg_8500;
wire    ap_CS_fsm_state50;
reg   [7:0] test_samples_data_lo_94_reg_8515;
reg   [7:0] test_samples_data_lo_95_reg_8520;
reg   [7:0] test_samples_data_lo_96_reg_8525;
wire    ap_CS_fsm_state51;
reg   [7:0] test_samples_data_lo_97_reg_8530;
wire   [22:0] add_ln41_fu_5246_p2;
reg   [22:0] add_ln41_reg_8535;
wire    ap_CS_fsm_state52;
wire   [15:0] j_fu_5258_p2;
reg   [15:0] j_reg_8543;
wire   [0:0] icmp_ln41_fu_5252_p2;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state100;
wire   [63:0] zext_ln43_fu_6331_p1;
reg   [63:0] zext_ln43_reg_9038;
wire    ap_CS_fsm_state102;
reg   [7:0] train_samples_label_1_reg_9049;
wire    ap_CS_fsm_state103;
wire   [6:0] i_fu_6342_p2;
reg   [6:0] i_reg_9057;
wire    ap_CS_fsm_state104;
wire   [0:0] icmp_ln86_fu_6336_p2;
wire    ap_CS_fsm_state105;
wire   [9:0] distance_fu_6378_p2;
wire    ap_CS_fsm_state106;
wire   [31:0] curr_size_fu_6390_p2;
reg   [31:0] curr_size_reg_9085;
wire    ap_CS_fsm_state107;
wire   [0:0] icmp_ln22_fu_6384_p2;
wire   [31:0] mid_fu_6420_p3;
reg   [31:0] mid_reg_9095;
wire    ap_CS_fsm_state108;
wire   [0:0] icmp_ln26_fu_6396_p2;
wire   [31:0] right_end_fu_6440_p3;
reg   [31:0] right_end_reg_9100;
wire   [31:0] left_start_fu_6449_p2;
reg   [31:0] left_start_reg_9105;
wire   [3:0] j_5_fu_6460_p2;
wire    ap_CS_fsm_state110;
wire   [30:0] j_6_fu_6480_p2;
reg   [30:0] j_6_reg_9121;
wire    ap_CS_fsm_state111;
wire   [0:0] icmp_ln62_fu_6475_p2;
wire   [31:0] select_ln74_fu_6506_p3;
wire   [31:0] distances_1_q0;
reg  signed [31:0] most_freq_reg_9136;
wire    ap_CS_fsm_state112;
reg   [3:0] freq_addr_1_reg_9141;
wire   [31:0] select_ln66_fu_6532_p3;
wire    ap_CS_fsm_state113;
wire   [31:0] select_ln66_1_fu_6540_p3;
reg   [15:0] distances_0_address0;
reg    distances_0_ce0;
reg    distances_0_we0;
reg   [31:0] distances_0_d0;
wire   [31:0] distances_0_q0;
reg   [15:0] distances_1_address0;
reg    distances_1_ce0;
reg    distances_1_we0;
reg   [31:0] distances_1_d0;
reg   [6:0] a_data_assign_address0;
reg    a_data_assign_ce0;
reg    a_data_assign_we0;
reg   [7:0] a_data_assign_d0;
wire   [7:0] a_data_assign_q0;
reg   [6:0] a_data_assign_address1;
reg    a_data_assign_ce1;
reg    a_data_assign_we1;
reg   [7:0] a_data_assign_d1;
reg   [6:0] b_data_assign_address0;
reg    b_data_assign_ce0;
reg    b_data_assign_we0;
wire   [7:0] b_data_assign_q0;
reg   [6:0] b_data_assign_address1;
reg    b_data_assign_ce1;
reg    b_data_assign_we1;
reg   [3:0] freq_address0;
reg    freq_ce0;
reg    freq_we0;
reg   [31:0] freq_d0;
wire   [31:0] freq_q0;
wire    grp_merge_fu_4136_ap_start;
wire    grp_merge_fu_4136_ap_done;
wire    grp_merge_fu_4136_ap_idle;
wire    grp_merge_fu_4136_ap_ready;
wire   [15:0] grp_merge_fu_4136_arr_0_address0;
wire    grp_merge_fu_4136_arr_0_ce0;
wire    grp_merge_fu_4136_arr_0_we0;
wire   [31:0] grp_merge_fu_4136_arr_0_d0;
wire   [15:0] grp_merge_fu_4136_arr_1_address0;
wire    grp_merge_fu_4136_arr_1_ce0;
wire    grp_merge_fu_4136_arr_1_we0;
wire   [31:0] grp_merge_fu_4136_arr_1_d0;
reg   [13:0] i_0_reg_3984;
reg   [31:0] num_matches_0_reg_3995;
reg   [19:0] phi_mul1_reg_4007;
reg   [15:0] j_0_reg_4019;
reg   [22:0] phi_mul_reg_4031;
reg   [6:0] i_0_i_reg_4043;
reg   [9:0] distance_0_i_reg_4054;
reg   [31:0] curr_size_0_i_reg_4066;
reg   [31:0] left_start_0_i_reg_4078;
wire    ap_CS_fsm_state109;
reg   [3:0] j1_0_reg_4090;
wire   [0:0] icmp_ln57_fu_6454_p2;
reg   [31:0] max_freq_0_reg_4101;
reg   [31:0] most_freq_0_reg_4113;
reg   [30:0] j2_0_reg_4125;
reg    grp_merge_fu_4136_ap_start_reg;
wire   [63:0] zext_ln32_fu_4146_p1;
wire   [63:0] zext_ln34_1_fu_4180_p1;
wire   [63:0] zext_ln34_fu_4169_p1;
wire   [63:0] zext_ln34_2_fu_4191_p1;
wire   [63:0] zext_ln34_3_fu_4202_p1;
wire   [63:0] zext_ln34_4_fu_4213_p1;
wire   [63:0] zext_ln34_5_fu_4224_p1;
wire   [63:0] zext_ln34_6_fu_4235_p1;
wire   [63:0] zext_ln34_7_fu_4246_p1;
wire   [63:0] zext_ln34_8_fu_4257_p1;
wire   [63:0] zext_ln34_9_fu_4268_p1;
wire   [63:0] zext_ln34_10_fu_4279_p1;
wire   [63:0] zext_ln34_11_fu_4290_p1;
wire   [63:0] zext_ln34_12_fu_4301_p1;
wire   [63:0] zext_ln34_13_fu_4312_p1;
wire   [63:0] zext_ln34_14_fu_4323_p1;
wire   [63:0] zext_ln34_15_fu_4334_p1;
wire   [63:0] zext_ln34_16_fu_4345_p1;
wire   [63:0] zext_ln34_17_fu_4356_p1;
wire   [63:0] zext_ln34_18_fu_4367_p1;
wire   [63:0] zext_ln34_19_fu_4378_p1;
wire   [63:0] zext_ln34_20_fu_4389_p1;
wire   [63:0] zext_ln34_21_fu_4400_p1;
wire   [63:0] zext_ln34_22_fu_4411_p1;
wire   [63:0] zext_ln34_23_fu_4422_p1;
wire   [63:0] zext_ln34_24_fu_4433_p1;
wire   [63:0] zext_ln34_25_fu_4444_p1;
wire   [63:0] zext_ln34_26_fu_4455_p1;
wire   [63:0] zext_ln34_27_fu_4466_p1;
wire   [63:0] zext_ln34_28_fu_4477_p1;
wire   [63:0] zext_ln34_29_fu_4488_p1;
wire   [63:0] zext_ln34_30_fu_4499_p1;
wire   [63:0] zext_ln34_31_fu_4510_p1;
wire   [63:0] zext_ln34_32_fu_4521_p1;
wire   [63:0] zext_ln34_33_fu_4532_p1;
wire   [63:0] zext_ln34_34_fu_4543_p1;
wire   [63:0] zext_ln34_35_fu_4554_p1;
wire   [63:0] zext_ln34_36_fu_4565_p1;
wire   [63:0] zext_ln34_37_fu_4576_p1;
wire   [63:0] zext_ln34_38_fu_4587_p1;
wire   [63:0] zext_ln34_39_fu_4598_p1;
wire   [63:0] zext_ln34_40_fu_4609_p1;
wire   [63:0] zext_ln34_41_fu_4620_p1;
wire   [63:0] zext_ln34_42_fu_4631_p1;
wire   [63:0] zext_ln34_43_fu_4642_p1;
wire   [63:0] zext_ln34_44_fu_4653_p1;
wire   [63:0] zext_ln34_45_fu_4664_p1;
wire   [63:0] zext_ln34_46_fu_4675_p1;
wire   [63:0] zext_ln34_47_fu_4686_p1;
wire   [63:0] zext_ln34_48_fu_4697_p1;
wire   [63:0] zext_ln34_49_fu_4708_p1;
wire   [63:0] zext_ln34_50_fu_4719_p1;
wire   [63:0] zext_ln34_51_fu_4730_p1;
wire   [63:0] zext_ln34_52_fu_4741_p1;
wire   [63:0] zext_ln34_53_fu_4752_p1;
wire   [63:0] zext_ln34_54_fu_4763_p1;
wire   [63:0] zext_ln34_55_fu_4774_p1;
wire   [63:0] zext_ln34_56_fu_4785_p1;
wire   [63:0] zext_ln34_57_fu_4796_p1;
wire   [63:0] zext_ln34_58_fu_4807_p1;
wire   [63:0] zext_ln34_59_fu_4818_p1;
wire   [63:0] zext_ln34_60_fu_4829_p1;
wire   [63:0] zext_ln34_61_fu_4840_p1;
wire   [63:0] zext_ln34_62_fu_4851_p1;
wire   [63:0] zext_ln34_63_fu_4862_p1;
wire   [63:0] zext_ln34_64_fu_4873_p1;
wire   [63:0] zext_ln34_65_fu_4884_p1;
wire   [63:0] zext_ln34_66_fu_4895_p1;
wire   [63:0] zext_ln34_67_fu_4906_p1;
wire   [63:0] zext_ln34_68_fu_4917_p1;
wire   [63:0] zext_ln34_69_fu_4928_p1;
wire   [63:0] zext_ln34_70_fu_4939_p1;
wire   [63:0] zext_ln34_71_fu_4950_p1;
wire   [63:0] zext_ln34_72_fu_4961_p1;
wire   [63:0] zext_ln34_73_fu_4972_p1;
wire   [63:0] zext_ln34_74_fu_4983_p1;
wire   [63:0] zext_ln34_75_fu_4994_p1;
wire   [63:0] zext_ln34_76_fu_5005_p1;
wire   [63:0] zext_ln34_77_fu_5016_p1;
wire   [63:0] zext_ln34_78_fu_5027_p1;
wire   [63:0] zext_ln34_79_fu_5038_p1;
wire   [63:0] zext_ln34_80_fu_5049_p1;
wire   [63:0] zext_ln34_81_fu_5060_p1;
wire   [63:0] zext_ln34_82_fu_5071_p1;
wire   [63:0] zext_ln34_83_fu_5082_p1;
wire   [63:0] zext_ln34_84_fu_5093_p1;
wire   [63:0] zext_ln34_85_fu_5104_p1;
wire   [63:0] zext_ln34_86_fu_5115_p1;
wire   [63:0] zext_ln34_87_fu_5126_p1;
wire   [63:0] zext_ln34_88_fu_5137_p1;
wire   [63:0] zext_ln34_89_fu_5148_p1;
wire   [63:0] zext_ln34_90_fu_5159_p1;
wire   [63:0] zext_ln34_91_fu_5170_p1;
wire   [63:0] zext_ln34_92_fu_5181_p1;
wire   [63:0] zext_ln34_93_fu_5192_p1;
wire   [63:0] zext_ln34_94_fu_5203_p1;
wire   [63:0] zext_ln34_95_fu_5214_p1;
wire   [63:0] zext_ln34_96_fu_5225_p1;
wire   [63:0] zext_ln34_97_fu_5236_p1;
wire   [63:0] zext_ln41_fu_5241_p1;
wire   [63:0] zext_ln43_1_fu_5270_p1;
wire   [63:0] zext_ln43_2_fu_5281_p1;
wire   [63:0] zext_ln43_3_fu_5292_p1;
wire   [63:0] zext_ln43_4_fu_5303_p1;
wire   [63:0] zext_ln43_5_fu_5314_p1;
wire   [63:0] zext_ln43_6_fu_5325_p1;
wire   [63:0] zext_ln43_7_fu_5336_p1;
wire   [63:0] zext_ln43_8_fu_5347_p1;
wire   [63:0] zext_ln43_9_fu_5358_p1;
wire   [63:0] zext_ln43_10_fu_5369_p1;
wire   [63:0] zext_ln43_11_fu_5380_p1;
wire   [63:0] zext_ln43_12_fu_5391_p1;
wire   [63:0] zext_ln43_13_fu_5402_p1;
wire   [63:0] zext_ln43_14_fu_5413_p1;
wire   [63:0] zext_ln43_15_fu_5424_p1;
wire   [63:0] zext_ln43_16_fu_5435_p1;
wire   [63:0] zext_ln43_17_fu_5446_p1;
wire   [63:0] zext_ln43_18_fu_5457_p1;
wire   [63:0] zext_ln43_19_fu_5468_p1;
wire   [63:0] zext_ln43_20_fu_5479_p1;
wire   [63:0] zext_ln43_21_fu_5490_p1;
wire   [63:0] zext_ln43_22_fu_5501_p1;
wire   [63:0] zext_ln43_23_fu_5512_p1;
wire   [63:0] zext_ln43_24_fu_5523_p1;
wire   [63:0] zext_ln43_25_fu_5534_p1;
wire   [63:0] zext_ln43_26_fu_5545_p1;
wire   [63:0] zext_ln43_27_fu_5556_p1;
wire   [63:0] zext_ln43_28_fu_5567_p1;
wire   [63:0] zext_ln43_29_fu_5578_p1;
wire   [63:0] zext_ln43_30_fu_5589_p1;
wire   [63:0] zext_ln43_31_fu_5600_p1;
wire   [63:0] zext_ln43_32_fu_5611_p1;
wire   [63:0] zext_ln43_33_fu_5622_p1;
wire   [63:0] zext_ln43_34_fu_5633_p1;
wire   [63:0] zext_ln43_35_fu_5644_p1;
wire   [63:0] zext_ln43_36_fu_5655_p1;
wire   [63:0] zext_ln43_37_fu_5666_p1;
wire   [63:0] zext_ln43_38_fu_5677_p1;
wire   [63:0] zext_ln43_39_fu_5688_p1;
wire   [63:0] zext_ln43_40_fu_5699_p1;
wire   [63:0] zext_ln43_41_fu_5710_p1;
wire   [63:0] zext_ln43_42_fu_5721_p1;
wire   [63:0] zext_ln43_43_fu_5732_p1;
wire   [63:0] zext_ln43_44_fu_5743_p1;
wire   [63:0] zext_ln43_45_fu_5754_p1;
wire   [63:0] zext_ln43_46_fu_5765_p1;
wire   [63:0] zext_ln43_47_fu_5776_p1;
wire   [63:0] zext_ln43_48_fu_5787_p1;
wire   [63:0] zext_ln43_49_fu_5798_p1;
wire   [63:0] zext_ln43_50_fu_5809_p1;
wire   [63:0] zext_ln43_51_fu_5820_p1;
wire   [63:0] zext_ln43_52_fu_5831_p1;
wire   [63:0] zext_ln43_53_fu_5842_p1;
wire   [63:0] zext_ln43_54_fu_5853_p1;
wire   [63:0] zext_ln43_55_fu_5864_p1;
wire   [63:0] zext_ln43_56_fu_5875_p1;
wire   [63:0] zext_ln43_57_fu_5886_p1;
wire   [63:0] zext_ln43_58_fu_5897_p1;
wire   [63:0] zext_ln43_59_fu_5908_p1;
wire   [63:0] zext_ln43_60_fu_5919_p1;
wire   [63:0] zext_ln43_61_fu_5930_p1;
wire   [63:0] zext_ln43_62_fu_5941_p1;
wire   [63:0] zext_ln43_63_fu_5952_p1;
wire   [63:0] zext_ln43_64_fu_5963_p1;
wire   [63:0] zext_ln43_65_fu_5974_p1;
wire   [63:0] zext_ln43_66_fu_5985_p1;
wire   [63:0] zext_ln43_67_fu_5996_p1;
wire   [63:0] zext_ln43_68_fu_6007_p1;
wire   [63:0] zext_ln43_69_fu_6018_p1;
wire   [63:0] zext_ln43_70_fu_6029_p1;
wire   [63:0] zext_ln43_71_fu_6040_p1;
wire   [63:0] zext_ln43_72_fu_6051_p1;
wire   [63:0] zext_ln43_73_fu_6062_p1;
wire   [63:0] zext_ln43_74_fu_6073_p1;
wire   [63:0] zext_ln43_75_fu_6084_p1;
wire   [63:0] zext_ln43_76_fu_6095_p1;
wire   [63:0] zext_ln43_77_fu_6106_p1;
wire   [63:0] zext_ln43_78_fu_6117_p1;
wire   [63:0] zext_ln43_79_fu_6128_p1;
wire   [63:0] zext_ln43_80_fu_6139_p1;
wire   [63:0] zext_ln43_81_fu_6150_p1;
wire   [63:0] zext_ln43_82_fu_6161_p1;
wire   [63:0] zext_ln43_83_fu_6172_p1;
wire   [63:0] zext_ln43_84_fu_6183_p1;
wire   [63:0] zext_ln43_85_fu_6194_p1;
wire   [63:0] zext_ln43_86_fu_6205_p1;
wire   [63:0] zext_ln43_87_fu_6216_p1;
wire   [63:0] zext_ln43_88_fu_6227_p1;
wire   [63:0] zext_ln43_89_fu_6238_p1;
wire   [63:0] zext_ln43_90_fu_6249_p1;
wire   [63:0] zext_ln43_91_fu_6260_p1;
wire   [63:0] zext_ln43_92_fu_6271_p1;
wire   [63:0] zext_ln43_93_fu_6282_p1;
wire   [63:0] zext_ln43_94_fu_6293_p1;
wire   [63:0] zext_ln43_95_fu_6304_p1;
wire   [63:0] zext_ln43_96_fu_6315_p1;
wire   [63:0] zext_ln43_97_fu_6326_p1;
wire   [63:0] zext_ln87_fu_6348_p1;
wire   [63:0] zext_ln87_1_fu_6369_p1;
wire   [63:0] zext_ln58_fu_6466_p1;
wire   [63:0] zext_ln64_fu_6486_p1;
wire  signed [63:0] sext_ln65_fu_6514_p1;
wire    ap_CS_fsm_state101;
wire   [31:0] zext_ln86_fu_6354_p1;
wire  signed [31:0] sext_ln44_fu_6359_p1;
wire   [31:0] max_freq_fu_6519_p2;
wire   [19:0] or_ln34_fu_4174_p2;
wire   [19:0] add_ln34_fu_4185_p2;
wire   [19:0] add_ln34_1_fu_4196_p2;
wire   [19:0] add_ln34_2_fu_4207_p2;
wire   [19:0] add_ln34_3_fu_4218_p2;
wire   [19:0] add_ln34_4_fu_4229_p2;
wire   [19:0] add_ln34_5_fu_4240_p2;
wire   [19:0] add_ln34_6_fu_4251_p2;
wire   [19:0] add_ln34_7_fu_4262_p2;
wire   [19:0] add_ln34_8_fu_4273_p2;
wire   [19:0] add_ln34_9_fu_4284_p2;
wire   [19:0] add_ln34_10_fu_4295_p2;
wire   [19:0] add_ln34_11_fu_4306_p2;
wire   [19:0] add_ln34_12_fu_4317_p2;
wire   [19:0] add_ln34_13_fu_4328_p2;
wire   [19:0] add_ln34_14_fu_4339_p2;
wire   [19:0] add_ln34_15_fu_4350_p2;
wire   [19:0] add_ln34_16_fu_4361_p2;
wire   [19:0] add_ln34_17_fu_4372_p2;
wire   [19:0] add_ln34_18_fu_4383_p2;
wire   [19:0] add_ln34_19_fu_4394_p2;
wire   [19:0] add_ln34_20_fu_4405_p2;
wire   [19:0] add_ln34_21_fu_4416_p2;
wire   [19:0] add_ln34_22_fu_4427_p2;
wire   [19:0] add_ln34_23_fu_4438_p2;
wire   [19:0] add_ln34_24_fu_4449_p2;
wire   [19:0] add_ln34_25_fu_4460_p2;
wire   [19:0] add_ln34_26_fu_4471_p2;
wire   [19:0] add_ln34_27_fu_4482_p2;
wire   [19:0] add_ln34_28_fu_4493_p2;
wire   [19:0] add_ln34_29_fu_4504_p2;
wire   [19:0] add_ln34_30_fu_4515_p2;
wire   [19:0] add_ln34_31_fu_4526_p2;
wire   [19:0] add_ln34_32_fu_4537_p2;
wire   [19:0] add_ln34_33_fu_4548_p2;
wire   [19:0] add_ln34_34_fu_4559_p2;
wire   [19:0] add_ln34_35_fu_4570_p2;
wire   [19:0] add_ln34_36_fu_4581_p2;
wire   [19:0] add_ln34_37_fu_4592_p2;
wire   [19:0] add_ln34_38_fu_4603_p2;
wire   [19:0] add_ln34_39_fu_4614_p2;
wire   [19:0] add_ln34_40_fu_4625_p2;
wire   [19:0] add_ln34_41_fu_4636_p2;
wire   [19:0] add_ln34_42_fu_4647_p2;
wire   [19:0] add_ln34_43_fu_4658_p2;
wire   [19:0] add_ln34_44_fu_4669_p2;
wire   [19:0] add_ln34_45_fu_4680_p2;
wire   [19:0] add_ln34_46_fu_4691_p2;
wire   [19:0] add_ln34_47_fu_4702_p2;
wire   [19:0] add_ln34_48_fu_4713_p2;
wire   [19:0] add_ln34_49_fu_4724_p2;
wire   [19:0] add_ln34_50_fu_4735_p2;
wire   [19:0] add_ln34_51_fu_4746_p2;
wire   [19:0] add_ln34_52_fu_4757_p2;
wire   [19:0] add_ln34_53_fu_4768_p2;
wire   [19:0] add_ln34_54_fu_4779_p2;
wire   [19:0] add_ln34_55_fu_4790_p2;
wire   [19:0] add_ln34_56_fu_4801_p2;
wire   [19:0] add_ln34_57_fu_4812_p2;
wire   [19:0] add_ln34_58_fu_4823_p2;
wire   [19:0] add_ln34_59_fu_4834_p2;
wire   [19:0] add_ln34_60_fu_4845_p2;
wire   [19:0] add_ln34_61_fu_4856_p2;
wire   [19:0] add_ln34_62_fu_4867_p2;
wire   [19:0] add_ln34_63_fu_4878_p2;
wire   [19:0] add_ln34_64_fu_4889_p2;
wire   [19:0] add_ln34_65_fu_4900_p2;
wire   [19:0] add_ln34_66_fu_4911_p2;
wire   [19:0] add_ln34_67_fu_4922_p2;
wire   [19:0] add_ln34_68_fu_4933_p2;
wire   [19:0] add_ln34_69_fu_4944_p2;
wire   [19:0] add_ln34_70_fu_4955_p2;
wire   [19:0] add_ln34_71_fu_4966_p2;
wire   [19:0] add_ln34_72_fu_4977_p2;
wire   [19:0] add_ln34_73_fu_4988_p2;
wire   [19:0] add_ln34_74_fu_4999_p2;
wire   [19:0] add_ln34_75_fu_5010_p2;
wire   [19:0] add_ln34_76_fu_5021_p2;
wire   [19:0] add_ln34_77_fu_5032_p2;
wire   [19:0] add_ln34_78_fu_5043_p2;
wire   [19:0] add_ln34_79_fu_5054_p2;
wire   [19:0] add_ln34_80_fu_5065_p2;
wire   [19:0] add_ln34_81_fu_5076_p2;
wire   [19:0] add_ln34_82_fu_5087_p2;
wire   [19:0] add_ln34_83_fu_5098_p2;
wire   [19:0] add_ln34_84_fu_5109_p2;
wire   [19:0] add_ln34_85_fu_5120_p2;
wire   [19:0] add_ln34_86_fu_5131_p2;
wire   [19:0] add_ln34_87_fu_5142_p2;
wire   [19:0] add_ln34_88_fu_5153_p2;
wire   [19:0] add_ln34_89_fu_5164_p2;
wire   [19:0] add_ln34_90_fu_5175_p2;
wire   [19:0] add_ln34_91_fu_5186_p2;
wire   [19:0] add_ln34_92_fu_5197_p2;
wire   [19:0] add_ln34_93_fu_5208_p2;
wire   [19:0] add_ln34_94_fu_5219_p2;
wire   [19:0] add_ln34_95_fu_5230_p2;
wire   [22:0] or_ln43_fu_5264_p2;
wire   [22:0] add_ln43_fu_5275_p2;
wire   [22:0] add_ln43_1_fu_5286_p2;
wire   [22:0] add_ln43_2_fu_5297_p2;
wire   [22:0] add_ln43_3_fu_5308_p2;
wire   [22:0] add_ln43_4_fu_5319_p2;
wire   [22:0] add_ln43_5_fu_5330_p2;
wire   [22:0] add_ln43_6_fu_5341_p2;
wire   [22:0] add_ln43_7_fu_5352_p2;
wire   [22:0] add_ln43_8_fu_5363_p2;
wire   [22:0] add_ln43_9_fu_5374_p2;
wire   [22:0] add_ln43_10_fu_5385_p2;
wire   [22:0] add_ln43_11_fu_5396_p2;
wire   [22:0] add_ln43_12_fu_5407_p2;
wire   [22:0] add_ln43_13_fu_5418_p2;
wire   [22:0] add_ln43_14_fu_5429_p2;
wire   [22:0] add_ln43_15_fu_5440_p2;
wire   [22:0] add_ln43_16_fu_5451_p2;
wire   [22:0] add_ln43_17_fu_5462_p2;
wire   [22:0] add_ln43_18_fu_5473_p2;
wire   [22:0] add_ln43_19_fu_5484_p2;
wire   [22:0] add_ln43_20_fu_5495_p2;
wire   [22:0] add_ln43_21_fu_5506_p2;
wire   [22:0] add_ln43_22_fu_5517_p2;
wire   [22:0] add_ln43_23_fu_5528_p2;
wire   [22:0] add_ln43_24_fu_5539_p2;
wire   [22:0] add_ln43_25_fu_5550_p2;
wire   [22:0] add_ln43_26_fu_5561_p2;
wire   [22:0] add_ln43_27_fu_5572_p2;
wire   [22:0] add_ln43_28_fu_5583_p2;
wire   [22:0] add_ln43_29_fu_5594_p2;
wire   [22:0] add_ln43_30_fu_5605_p2;
wire   [22:0] add_ln43_31_fu_5616_p2;
wire   [22:0] add_ln43_32_fu_5627_p2;
wire   [22:0] add_ln43_33_fu_5638_p2;
wire   [22:0] add_ln43_34_fu_5649_p2;
wire   [22:0] add_ln43_35_fu_5660_p2;
wire   [22:0] add_ln43_36_fu_5671_p2;
wire   [22:0] add_ln43_37_fu_5682_p2;
wire   [22:0] add_ln43_38_fu_5693_p2;
wire   [22:0] add_ln43_39_fu_5704_p2;
wire   [22:0] add_ln43_40_fu_5715_p2;
wire   [22:0] add_ln43_41_fu_5726_p2;
wire   [22:0] add_ln43_42_fu_5737_p2;
wire   [22:0] add_ln43_43_fu_5748_p2;
wire   [22:0] add_ln43_44_fu_5759_p2;
wire   [22:0] add_ln43_45_fu_5770_p2;
wire   [22:0] add_ln43_46_fu_5781_p2;
wire   [22:0] add_ln43_47_fu_5792_p2;
wire   [22:0] add_ln43_48_fu_5803_p2;
wire   [22:0] add_ln43_49_fu_5814_p2;
wire   [22:0] add_ln43_50_fu_5825_p2;
wire   [22:0] add_ln43_51_fu_5836_p2;
wire   [22:0] add_ln43_52_fu_5847_p2;
wire   [22:0] add_ln43_53_fu_5858_p2;
wire   [22:0] add_ln43_54_fu_5869_p2;
wire   [22:0] add_ln43_55_fu_5880_p2;
wire   [22:0] add_ln43_56_fu_5891_p2;
wire   [22:0] add_ln43_57_fu_5902_p2;
wire   [22:0] add_ln43_58_fu_5913_p2;
wire   [22:0] add_ln43_59_fu_5924_p2;
wire   [22:0] add_ln43_60_fu_5935_p2;
wire   [22:0] add_ln43_61_fu_5946_p2;
wire   [22:0] add_ln43_62_fu_5957_p2;
wire   [22:0] add_ln43_63_fu_5968_p2;
wire   [22:0] add_ln43_64_fu_5979_p2;
wire   [22:0] add_ln43_65_fu_5990_p2;
wire   [22:0] add_ln43_66_fu_6001_p2;
wire   [22:0] add_ln43_67_fu_6012_p2;
wire   [22:0] add_ln43_68_fu_6023_p2;
wire   [22:0] add_ln43_69_fu_6034_p2;
wire   [22:0] add_ln43_70_fu_6045_p2;
wire   [22:0] add_ln43_71_fu_6056_p2;
wire   [22:0] add_ln43_72_fu_6067_p2;
wire   [22:0] add_ln43_73_fu_6078_p2;
wire   [22:0] add_ln43_74_fu_6089_p2;
wire   [22:0] add_ln43_75_fu_6100_p2;
wire   [22:0] add_ln43_76_fu_6111_p2;
wire   [22:0] add_ln43_77_fu_6122_p2;
wire   [22:0] add_ln43_78_fu_6133_p2;
wire   [22:0] add_ln43_79_fu_6144_p2;
wire   [22:0] add_ln43_80_fu_6155_p2;
wire   [22:0] add_ln43_81_fu_6166_p2;
wire   [22:0] add_ln43_82_fu_6177_p2;
wire   [22:0] add_ln43_83_fu_6188_p2;
wire   [22:0] add_ln43_84_fu_6199_p2;
wire   [22:0] add_ln43_85_fu_6210_p2;
wire   [22:0] add_ln43_86_fu_6221_p2;
wire   [22:0] add_ln43_87_fu_6232_p2;
wire   [22:0] add_ln43_88_fu_6243_p2;
wire   [22:0] add_ln43_89_fu_6254_p2;
wire   [22:0] add_ln43_90_fu_6265_p2;
wire   [22:0] add_ln43_91_fu_6276_p2;
wire   [22:0] add_ln43_92_fu_6287_p2;
wire   [22:0] add_ln43_93_fu_6298_p2;
wire   [22:0] add_ln43_94_fu_6309_p2;
wire   [22:0] add_ln43_95_fu_6320_p2;
wire   [7:0] xor_ln87_fu_6363_p2;
wire   [9:0] zext_ln87_2_fu_6374_p1;
wire   [31:0] add_ln30_fu_6402_p2;
wire   [31:0] add_ln30_1_fu_6408_p2;
wire   [0:0] icmp_ln8_fu_6414_p2;
wire   [31:0] add_ln32_fu_6429_p2;
wire   [0:0] icmp_ln8_1_fu_6434_p2;
wire   [31:0] zext_ln62_fu_6471_p1;
wire  signed [31:0] sext_ln74_fu_6491_p1;
wire   [0:0] icmp_ln74_fu_6494_p2;
wire   [31:0] num_matches_fu_6500_p2;
wire  signed [31:0] sext_ln65_fu_6514_p0;
wire   [0:0] icmp_ln66_fu_6526_p2;
reg   [112:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 113'd1;
#0 grp_merge_fu_4136_ap_start_reg = 1'b0;
end

knn_bitcount #(
    .DataWidth( 4 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
bitcount_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bitcount_address0),
    .ce0(bitcount_ce0),
    .q0(bitcount_q0)
);

merge_L_0 #(
    .DataWidth( 32 ),
    .AddressRange( 60000 ),
    .AddressWidth( 16 ))
distances_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(distances_0_address0),
    .ce0(distances_0_ce0),
    .we0(distances_0_we0),
    .d0(distances_0_d0),
    .q0(distances_0_q0)
);

merge_L_0 #(
    .DataWidth( 32 ),
    .AddressRange( 60000 ),
    .AddressWidth( 16 ))
distances_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(distances_1_address0),
    .ce0(distances_1_ce0),
    .we0(distances_1_we0),
    .d0(distances_1_d0),
    .q0(distances_1_q0)
);

knn_a_data_assign #(
    .DataWidth( 8 ),
    .AddressRange( 98 ),
    .AddressWidth( 7 ))
a_data_assign_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(a_data_assign_address0),
    .ce0(a_data_assign_ce0),
    .we0(a_data_assign_we0),
    .d0(a_data_assign_d0),
    .q0(a_data_assign_q0),
    .address1(a_data_assign_address1),
    .ce1(a_data_assign_ce1),
    .we1(a_data_assign_we1),
    .d1(a_data_assign_d1)
);

knn_a_data_assign #(
    .DataWidth( 8 ),
    .AddressRange( 98 ),
    .AddressWidth( 7 ))
b_data_assign_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_data_assign_address0),
    .ce0(b_data_assign_ce0),
    .we0(b_data_assign_we0),
    .d0(train_samples_data_q0),
    .q0(b_data_assign_q0),
    .address1(b_data_assign_address1),
    .ce1(b_data_assign_ce1),
    .we1(b_data_assign_we1),
    .d1(train_samples_data_q1)
);

knn_freq #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
freq_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freq_address0),
    .ce0(freq_ce0),
    .we0(freq_we0),
    .d0(freq_d0),
    .q0(freq_q0)
);

merge grp_merge_fu_4136(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_merge_fu_4136_ap_start),
    .ap_done(grp_merge_fu_4136_ap_done),
    .ap_idle(grp_merge_fu_4136_ap_idle),
    .ap_ready(grp_merge_fu_4136_ap_ready),
    .arr_0_address0(grp_merge_fu_4136_arr_0_address0),
    .arr_0_ce0(grp_merge_fu_4136_arr_0_ce0),
    .arr_0_we0(grp_merge_fu_4136_arr_0_we0),
    .arr_0_d0(grp_merge_fu_4136_arr_0_d0),
    .arr_0_q0(distances_0_q0),
    .arr_1_address0(grp_merge_fu_4136_arr_1_address0),
    .arr_1_ce0(grp_merge_fu_4136_arr_1_ce0),
    .arr_1_we0(grp_merge_fu_4136_arr_1_we0),
    .arr_1_d0(grp_merge_fu_4136_arr_1_d0),
    .arr_1_q0(distances_1_q0),
    .l(left_start_0_i_reg_4078),
    .m(mid_reg_9095),
    .r(right_end_reg_9100)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_merge_fu_4136_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state108) & (icmp_ln26_fu_6396_p2 == 1'd1))) begin
            grp_merge_fu_4136_ap_start_reg <= 1'b1;
        end else if ((grp_merge_fu_4136_ap_ready == 1'b1)) begin
            grp_merge_fu_4136_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (icmp_ln41_fu_5252_p2 == 1'd1))) begin
        curr_size_0_i_reg_4066 <= 32'd1;
    end else if (((icmp_ln26_fu_6396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        curr_size_0_i_reg_4066 <= curr_size_reg_9085;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        distance_0_i_reg_4054 <= distance_fu_6378_p2;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        distance_0_i_reg_4054 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        i_0_i_reg_4043 <= i_reg_9057;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        i_0_i_reg_4043 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_6475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
        i_0_reg_3984 <= i_5_reg_7540;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_3984 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state107) & (icmp_ln22_fu_6384_p2 == 1'd1))) begin
        j1_0_reg_4090 <= 4'd0;
    end else if (((icmp_ln57_fu_6454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state110))) begin
        j1_0_reg_4090 <= j_5_fu_6460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state110) & (icmp_ln57_fu_6454_p2 == 1'd1))) begin
        j2_0_reg_4125 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        j2_0_reg_4125 <= j_6_reg_9121;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state104) & (icmp_ln86_fu_6336_p2 == 1'd1))) begin
        j_0_reg_4019 <= j_reg_8543;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        j_0_reg_4019 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state109) & (grp_merge_fu_4136_ap_done == 1'b1))) begin
        left_start_0_i_reg_4078 <= left_start_reg_9105;
    end else if (((icmp_ln22_fu_6384_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        left_start_0_i_reg_4078 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state110) & (icmp_ln57_fu_6454_p2 == 1'd1))) begin
        max_freq_0_reg_4101 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        max_freq_0_reg_4101 <= select_ln66_fu_6532_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state110) & (icmp_ln57_fu_6454_p2 == 1'd1))) begin
        most_freq_0_reg_4113 <= 32'd4294967295;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        most_freq_0_reg_4113 <= select_ln66_1_fu_6540_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_6475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
        num_matches_0_reg_3995 <= select_ln74_fu_6506_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        num_matches_0_reg_3995 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_6475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
        phi_mul1_reg_4007 <= add_ln32_1_reg_7532;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul1_reg_4007 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state104) & (icmp_ln86_fu_6336_p2 == 1'd1))) begin
        phi_mul_reg_4031 <= add_ln41_reg_8535;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        phi_mul_reg_4031 <= 23'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln32_1_reg_7532 <= add_ln32_1_fu_4151_p2;
        i_5_reg_7540 <= i_5_fu_4163_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        add_ln41_reg_8535 <= add_ln41_fu_5246_p2;
        j_reg_8543 <= j_fu_5258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_6384_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        curr_size_reg_9085[31 : 1] <= curr_size_fu_6390_p2[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        freq_addr_1_reg_9141 <= sext_ln65_fu_6514_p1;
        most_freq_reg_9136 <= distances_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        i_reg_9057 <= i_fu_6342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        j_6_reg_9121 <= j_6_fu_6480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state108) & (icmp_ln26_fu_6396_p2 == 1'd1))) begin
        left_start_reg_9105 <= left_start_fu_6449_p2;
        mid_reg_9095 <= mid_fu_6420_p3;
        right_end_reg_9100 <= right_end_fu_6440_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        test_sample_label_reg_7570 <= test_samples_label_q0;
        test_samples_data_lo_1_reg_7580 <= test_samples_data_q1;
        test_samples_data_lo_reg_7575 <= test_samples_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        test_samples_data_lo_10_reg_7675 <= test_samples_data_q0;
        test_samples_data_lo_11_reg_7680 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        test_samples_data_lo_12_reg_7695 <= test_samples_data_q0;
        test_samples_data_lo_13_reg_7700 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        test_samples_data_lo_14_reg_7715 <= test_samples_data_q0;
        test_samples_data_lo_15_reg_7720 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        test_samples_data_lo_16_reg_7735 <= test_samples_data_q0;
        test_samples_data_lo_17_reg_7740 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        test_samples_data_lo_18_reg_7755 <= test_samples_data_q0;
        test_samples_data_lo_19_reg_7760 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        test_samples_data_lo_20_reg_7775 <= test_samples_data_q0;
        test_samples_data_lo_21_reg_7780 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        test_samples_data_lo_22_reg_7795 <= test_samples_data_q0;
        test_samples_data_lo_23_reg_7800 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        test_samples_data_lo_24_reg_7815 <= test_samples_data_q0;
        test_samples_data_lo_25_reg_7820 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        test_samples_data_lo_26_reg_7835 <= test_samples_data_q0;
        test_samples_data_lo_27_reg_7840 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        test_samples_data_lo_28_reg_7855 <= test_samples_data_q0;
        test_samples_data_lo_29_reg_7860 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        test_samples_data_lo_2_reg_7595 <= test_samples_data_q0;
        test_samples_data_lo_3_reg_7600 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        test_samples_data_lo_30_reg_7875 <= test_samples_data_q0;
        test_samples_data_lo_31_reg_7880 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        test_samples_data_lo_32_reg_7895 <= test_samples_data_q0;
        test_samples_data_lo_33_reg_7900 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        test_samples_data_lo_34_reg_7915 <= test_samples_data_q0;
        test_samples_data_lo_35_reg_7920 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        test_samples_data_lo_36_reg_7935 <= test_samples_data_q0;
        test_samples_data_lo_37_reg_7940 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        test_samples_data_lo_38_reg_7955 <= test_samples_data_q0;
        test_samples_data_lo_39_reg_7960 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        test_samples_data_lo_40_reg_7975 <= test_samples_data_q0;
        test_samples_data_lo_41_reg_7980 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        test_samples_data_lo_42_reg_7995 <= test_samples_data_q0;
        test_samples_data_lo_43_reg_8000 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        test_samples_data_lo_44_reg_8015 <= test_samples_data_q0;
        test_samples_data_lo_45_reg_8020 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        test_samples_data_lo_46_reg_8035 <= test_samples_data_q0;
        test_samples_data_lo_47_reg_8040 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        test_samples_data_lo_48_reg_8055 <= test_samples_data_q0;
        test_samples_data_lo_49_reg_8060 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        test_samples_data_lo_4_reg_7615 <= test_samples_data_q0;
        test_samples_data_lo_5_reg_7620 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        test_samples_data_lo_50_reg_8075 <= test_samples_data_q0;
        test_samples_data_lo_51_reg_8080 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        test_samples_data_lo_52_reg_8095 <= test_samples_data_q0;
        test_samples_data_lo_53_reg_8100 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        test_samples_data_lo_54_reg_8115 <= test_samples_data_q0;
        test_samples_data_lo_55_reg_8120 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        test_samples_data_lo_56_reg_8135 <= test_samples_data_q0;
        test_samples_data_lo_57_reg_8140 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        test_samples_data_lo_58_reg_8155 <= test_samples_data_q0;
        test_samples_data_lo_59_reg_8160 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        test_samples_data_lo_60_reg_8175 <= test_samples_data_q0;
        test_samples_data_lo_61_reg_8180 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        test_samples_data_lo_62_reg_8195 <= test_samples_data_q0;
        test_samples_data_lo_63_reg_8200 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        test_samples_data_lo_64_reg_8215 <= test_samples_data_q0;
        test_samples_data_lo_65_reg_8220 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        test_samples_data_lo_66_reg_8235 <= test_samples_data_q0;
        test_samples_data_lo_67_reg_8240 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        test_samples_data_lo_68_reg_8255 <= test_samples_data_q0;
        test_samples_data_lo_69_reg_8260 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        test_samples_data_lo_6_reg_7635 <= test_samples_data_q0;
        test_samples_data_lo_7_reg_7640 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        test_samples_data_lo_70_reg_8275 <= test_samples_data_q0;
        test_samples_data_lo_71_reg_8280 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        test_samples_data_lo_72_reg_8295 <= test_samples_data_q0;
        test_samples_data_lo_73_reg_8300 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_samples_data_lo_74_reg_8315 <= test_samples_data_q0;
        test_samples_data_lo_75_reg_8320 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        test_samples_data_lo_76_reg_8335 <= test_samples_data_q0;
        test_samples_data_lo_77_reg_8340 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        test_samples_data_lo_78_reg_8355 <= test_samples_data_q0;
        test_samples_data_lo_79_reg_8360 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        test_samples_data_lo_80_reg_8375 <= test_samples_data_q0;
        test_samples_data_lo_81_reg_8380 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        test_samples_data_lo_82_reg_8395 <= test_samples_data_q0;
        test_samples_data_lo_83_reg_8400 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        test_samples_data_lo_84_reg_8415 <= test_samples_data_q0;
        test_samples_data_lo_85_reg_8420 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        test_samples_data_lo_86_reg_8435 <= test_samples_data_q0;
        test_samples_data_lo_87_reg_8440 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        test_samples_data_lo_88_reg_8455 <= test_samples_data_q0;
        test_samples_data_lo_89_reg_8460 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        test_samples_data_lo_8_reg_7655 <= test_samples_data_q0;
        test_samples_data_lo_9_reg_7660 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        test_samples_data_lo_90_reg_8475 <= test_samples_data_q0;
        test_samples_data_lo_91_reg_8480 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        test_samples_data_lo_92_reg_8495 <= test_samples_data_q0;
        test_samples_data_lo_93_reg_8500 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        test_samples_data_lo_94_reg_8515 <= test_samples_data_q0;
        test_samples_data_lo_95_reg_8520 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        test_samples_data_lo_96_reg_8525 <= test_samples_data_q0;
        test_samples_data_lo_97_reg_8530 <= test_samples_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        train_samples_label_1_reg_9049 <= train_samples_label_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        zext_ln43_reg_9038[15 : 0] <= zext_ln43_fu_6331_p1[15 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        a_data_assign_address0 = zext_ln87_fu_6348_p1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        a_data_assign_address0 = 64'd96;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        a_data_assign_address0 = 64'd94;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        a_data_assign_address0 = 64'd92;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        a_data_assign_address0 = 64'd90;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        a_data_assign_address0 = 64'd88;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        a_data_assign_address0 = 64'd86;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        a_data_assign_address0 = 64'd84;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        a_data_assign_address0 = 64'd82;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        a_data_assign_address0 = 64'd80;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        a_data_assign_address0 = 64'd78;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        a_data_assign_address0 = 64'd76;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        a_data_assign_address0 = 64'd74;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        a_data_assign_address0 = 64'd72;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        a_data_assign_address0 = 64'd70;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        a_data_assign_address0 = 64'd68;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        a_data_assign_address0 = 64'd66;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        a_data_assign_address0 = 64'd64;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        a_data_assign_address0 = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        a_data_assign_address0 = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        a_data_assign_address0 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        a_data_assign_address0 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        a_data_assign_address0 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        a_data_assign_address0 = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        a_data_assign_address0 = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        a_data_assign_address0 = 64'd48;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        a_data_assign_address0 = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        a_data_assign_address0 = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        a_data_assign_address0 = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        a_data_assign_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        a_data_assign_address0 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        a_data_assign_address0 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        a_data_assign_address0 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        a_data_assign_address0 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        a_data_assign_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        a_data_assign_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        a_data_assign_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        a_data_assign_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        a_data_assign_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        a_data_assign_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        a_data_assign_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        a_data_assign_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        a_data_assign_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        a_data_assign_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        a_data_assign_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        a_data_assign_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        a_data_assign_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        a_data_assign_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        a_data_assign_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        a_data_assign_address0 = 64'd0;
    end else begin
        a_data_assign_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        a_data_assign_address1 = 64'd97;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        a_data_assign_address1 = 64'd95;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        a_data_assign_address1 = 64'd93;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        a_data_assign_address1 = 64'd91;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        a_data_assign_address1 = 64'd89;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        a_data_assign_address1 = 64'd87;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        a_data_assign_address1 = 64'd85;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        a_data_assign_address1 = 64'd83;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        a_data_assign_address1 = 64'd81;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        a_data_assign_address1 = 64'd79;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        a_data_assign_address1 = 64'd77;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        a_data_assign_address1 = 64'd75;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        a_data_assign_address1 = 64'd73;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        a_data_assign_address1 = 64'd71;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        a_data_assign_address1 = 64'd69;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        a_data_assign_address1 = 64'd67;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        a_data_assign_address1 = 64'd65;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        a_data_assign_address1 = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        a_data_assign_address1 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        a_data_assign_address1 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        a_data_assign_address1 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        a_data_assign_address1 = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        a_data_assign_address1 = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        a_data_assign_address1 = 64'd51;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        a_data_assign_address1 = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        a_data_assign_address1 = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        a_data_assign_address1 = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        a_data_assign_address1 = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        a_data_assign_address1 = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        a_data_assign_address1 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        a_data_assign_address1 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        a_data_assign_address1 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        a_data_assign_address1 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        a_data_assign_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        a_data_assign_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        a_data_assign_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        a_data_assign_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        a_data_assign_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        a_data_assign_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        a_data_assign_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        a_data_assign_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        a_data_assign_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        a_data_assign_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        a_data_assign_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        a_data_assign_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        a_data_assign_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        a_data_assign_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        a_data_assign_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        a_data_assign_address1 = 64'd1;
    end else begin
        a_data_assign_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52))) begin
        a_data_assign_ce0 = 1'b1;
    end else begin
        a_data_assign_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52))) begin
        a_data_assign_ce1 = 1'b1;
    end else begin
        a_data_assign_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        a_data_assign_d0 = test_samples_data_lo_96_reg_8525;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        a_data_assign_d0 = test_samples_data_lo_94_reg_8515;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        a_data_assign_d0 = test_samples_data_lo_92_reg_8495;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        a_data_assign_d0 = test_samples_data_lo_90_reg_8475;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        a_data_assign_d0 = test_samples_data_lo_88_reg_8455;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        a_data_assign_d0 = test_samples_data_lo_86_reg_8435;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        a_data_assign_d0 = test_samples_data_lo_84_reg_8415;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        a_data_assign_d0 = test_samples_data_lo_82_reg_8395;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        a_data_assign_d0 = test_samples_data_lo_80_reg_8375;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        a_data_assign_d0 = test_samples_data_lo_78_reg_8355;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        a_data_assign_d0 = test_samples_data_lo_76_reg_8335;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        a_data_assign_d0 = test_samples_data_lo_74_reg_8315;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        a_data_assign_d0 = test_samples_data_lo_72_reg_8295;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        a_data_assign_d0 = test_samples_data_lo_70_reg_8275;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        a_data_assign_d0 = test_samples_data_lo_68_reg_8255;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        a_data_assign_d0 = test_samples_data_lo_66_reg_8235;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        a_data_assign_d0 = test_samples_data_lo_64_reg_8215;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        a_data_assign_d0 = test_samples_data_lo_62_reg_8195;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        a_data_assign_d0 = test_samples_data_lo_60_reg_8175;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        a_data_assign_d0 = test_samples_data_lo_58_reg_8155;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        a_data_assign_d0 = test_samples_data_lo_56_reg_8135;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        a_data_assign_d0 = test_samples_data_lo_54_reg_8115;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        a_data_assign_d0 = test_samples_data_lo_52_reg_8095;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        a_data_assign_d0 = test_samples_data_lo_50_reg_8075;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        a_data_assign_d0 = test_samples_data_lo_48_reg_8055;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        a_data_assign_d0 = test_samples_data_lo_46_reg_8035;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        a_data_assign_d0 = test_samples_data_lo_44_reg_8015;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        a_data_assign_d0 = test_samples_data_lo_42_reg_7995;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        a_data_assign_d0 = test_samples_data_lo_40_reg_7975;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        a_data_assign_d0 = test_samples_data_lo_38_reg_7955;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        a_data_assign_d0 = test_samples_data_lo_36_reg_7935;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        a_data_assign_d0 = test_samples_data_lo_34_reg_7915;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        a_data_assign_d0 = test_samples_data_lo_32_reg_7895;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        a_data_assign_d0 = test_samples_data_lo_30_reg_7875;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        a_data_assign_d0 = test_samples_data_lo_28_reg_7855;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        a_data_assign_d0 = test_samples_data_lo_26_reg_7835;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        a_data_assign_d0 = test_samples_data_lo_24_reg_7815;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        a_data_assign_d0 = test_samples_data_lo_22_reg_7795;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        a_data_assign_d0 = test_samples_data_lo_20_reg_7775;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        a_data_assign_d0 = test_samples_data_lo_18_reg_7755;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        a_data_assign_d0 = test_samples_data_lo_16_reg_7735;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        a_data_assign_d0 = test_samples_data_lo_14_reg_7715;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        a_data_assign_d0 = test_samples_data_lo_12_reg_7695;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        a_data_assign_d0 = test_samples_data_lo_10_reg_7675;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        a_data_assign_d0 = test_samples_data_lo_8_reg_7655;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        a_data_assign_d0 = test_samples_data_lo_6_reg_7635;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        a_data_assign_d0 = test_samples_data_lo_4_reg_7615;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        a_data_assign_d0 = test_samples_data_lo_2_reg_7595;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        a_data_assign_d0 = test_samples_data_lo_reg_7575;
    end else begin
        a_data_assign_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        a_data_assign_d1 = test_samples_data_lo_97_reg_8530;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        a_data_assign_d1 = test_samples_data_lo_95_reg_8520;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        a_data_assign_d1 = test_samples_data_lo_93_reg_8500;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        a_data_assign_d1 = test_samples_data_lo_91_reg_8480;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        a_data_assign_d1 = test_samples_data_lo_89_reg_8460;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        a_data_assign_d1 = test_samples_data_lo_87_reg_8440;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        a_data_assign_d1 = test_samples_data_lo_85_reg_8420;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        a_data_assign_d1 = test_samples_data_lo_83_reg_8400;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        a_data_assign_d1 = test_samples_data_lo_81_reg_8380;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        a_data_assign_d1 = test_samples_data_lo_79_reg_8360;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        a_data_assign_d1 = test_samples_data_lo_77_reg_8340;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        a_data_assign_d1 = test_samples_data_lo_75_reg_8320;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        a_data_assign_d1 = test_samples_data_lo_73_reg_8300;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        a_data_assign_d1 = test_samples_data_lo_71_reg_8280;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        a_data_assign_d1 = test_samples_data_lo_69_reg_8260;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        a_data_assign_d1 = test_samples_data_lo_67_reg_8240;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        a_data_assign_d1 = test_samples_data_lo_65_reg_8220;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        a_data_assign_d1 = test_samples_data_lo_63_reg_8200;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        a_data_assign_d1 = test_samples_data_lo_61_reg_8180;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        a_data_assign_d1 = test_samples_data_lo_59_reg_8160;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        a_data_assign_d1 = test_samples_data_lo_57_reg_8140;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        a_data_assign_d1 = test_samples_data_lo_55_reg_8120;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        a_data_assign_d1 = test_samples_data_lo_53_reg_8100;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        a_data_assign_d1 = test_samples_data_lo_51_reg_8080;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        a_data_assign_d1 = test_samples_data_lo_49_reg_8060;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        a_data_assign_d1 = test_samples_data_lo_47_reg_8040;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        a_data_assign_d1 = test_samples_data_lo_45_reg_8020;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        a_data_assign_d1 = test_samples_data_lo_43_reg_8000;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        a_data_assign_d1 = test_samples_data_lo_41_reg_7980;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        a_data_assign_d1 = test_samples_data_lo_39_reg_7960;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        a_data_assign_d1 = test_samples_data_lo_37_reg_7940;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        a_data_assign_d1 = test_samples_data_lo_35_reg_7920;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        a_data_assign_d1 = test_samples_data_lo_33_reg_7900;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        a_data_assign_d1 = test_samples_data_lo_31_reg_7880;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        a_data_assign_d1 = test_samples_data_lo_29_reg_7860;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        a_data_assign_d1 = test_samples_data_lo_27_reg_7840;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        a_data_assign_d1 = test_samples_data_lo_25_reg_7820;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        a_data_assign_d1 = test_samples_data_lo_23_reg_7800;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        a_data_assign_d1 = test_samples_data_lo_21_reg_7780;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        a_data_assign_d1 = test_samples_data_lo_19_reg_7760;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        a_data_assign_d1 = test_samples_data_lo_17_reg_7740;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        a_data_assign_d1 = test_samples_data_lo_15_reg_7720;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        a_data_assign_d1 = test_samples_data_lo_13_reg_7700;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        a_data_assign_d1 = test_samples_data_lo_11_reg_7680;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        a_data_assign_d1 = test_samples_data_lo_9_reg_7660;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        a_data_assign_d1 = test_samples_data_lo_7_reg_7640;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        a_data_assign_d1 = test_samples_data_lo_5_reg_7620;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        a_data_assign_d1 = test_samples_data_lo_3_reg_7600;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        a_data_assign_d1 = test_samples_data_lo_1_reg_7580;
    end else begin
        a_data_assign_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | ((icmp_ln41_fu_5252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52)))) begin
        a_data_assign_we0 = 1'b1;
    end else begin
        a_data_assign_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | ((icmp_ln41_fu_5252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52)))) begin
        a_data_assign_we1 = 1'b1;
    end else begin
        a_data_assign_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln32_fu_4157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln32_fu_4157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        b_data_assign_address0 = zext_ln87_fu_6348_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        b_data_assign_address0 = 64'd96;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        b_data_assign_address0 = 64'd94;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        b_data_assign_address0 = 64'd92;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        b_data_assign_address0 = 64'd90;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        b_data_assign_address0 = 64'd88;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        b_data_assign_address0 = 64'd86;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        b_data_assign_address0 = 64'd84;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        b_data_assign_address0 = 64'd82;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        b_data_assign_address0 = 64'd80;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        b_data_assign_address0 = 64'd78;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        b_data_assign_address0 = 64'd76;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        b_data_assign_address0 = 64'd74;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        b_data_assign_address0 = 64'd72;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        b_data_assign_address0 = 64'd70;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        b_data_assign_address0 = 64'd68;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        b_data_assign_address0 = 64'd66;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        b_data_assign_address0 = 64'd64;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        b_data_assign_address0 = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        b_data_assign_address0 = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        b_data_assign_address0 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        b_data_assign_address0 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        b_data_assign_address0 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        b_data_assign_address0 = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        b_data_assign_address0 = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        b_data_assign_address0 = 64'd48;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        b_data_assign_address0 = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        b_data_assign_address0 = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        b_data_assign_address0 = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        b_data_assign_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        b_data_assign_address0 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        b_data_assign_address0 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        b_data_assign_address0 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        b_data_assign_address0 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        b_data_assign_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        b_data_assign_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        b_data_assign_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        b_data_assign_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        b_data_assign_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        b_data_assign_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        b_data_assign_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        b_data_assign_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        b_data_assign_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        b_data_assign_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        b_data_assign_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        b_data_assign_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        b_data_assign_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        b_data_assign_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        b_data_assign_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        b_data_assign_address0 = 64'd0;
    end else begin
        b_data_assign_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        b_data_assign_address1 = 64'd97;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        b_data_assign_address1 = 64'd95;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        b_data_assign_address1 = 64'd93;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        b_data_assign_address1 = 64'd91;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        b_data_assign_address1 = 64'd89;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        b_data_assign_address1 = 64'd87;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        b_data_assign_address1 = 64'd85;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        b_data_assign_address1 = 64'd83;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        b_data_assign_address1 = 64'd81;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        b_data_assign_address1 = 64'd79;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        b_data_assign_address1 = 64'd77;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        b_data_assign_address1 = 64'd75;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        b_data_assign_address1 = 64'd73;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        b_data_assign_address1 = 64'd71;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        b_data_assign_address1 = 64'd69;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        b_data_assign_address1 = 64'd67;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        b_data_assign_address1 = 64'd65;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        b_data_assign_address1 = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        b_data_assign_address1 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        b_data_assign_address1 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        b_data_assign_address1 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        b_data_assign_address1 = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        b_data_assign_address1 = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        b_data_assign_address1 = 64'd51;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        b_data_assign_address1 = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        b_data_assign_address1 = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        b_data_assign_address1 = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        b_data_assign_address1 = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        b_data_assign_address1 = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        b_data_assign_address1 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        b_data_assign_address1 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        b_data_assign_address1 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        b_data_assign_address1 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        b_data_assign_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        b_data_assign_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        b_data_assign_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        b_data_assign_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        b_data_assign_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        b_data_assign_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        b_data_assign_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        b_data_assign_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        b_data_assign_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        b_data_assign_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        b_data_assign_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        b_data_assign_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        b_data_assign_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        b_data_assign_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        b_data_assign_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        b_data_assign_address1 = 64'd1;
    end else begin
        b_data_assign_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        b_data_assign_ce0 = 1'b1;
    end else begin
        b_data_assign_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        b_data_assign_ce1 = 1'b1;
    end else begin
        b_data_assign_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        b_data_assign_we0 = 1'b1;
    end else begin
        b_data_assign_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        b_data_assign_we1 = 1'b1;
    end else begin
        b_data_assign_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        bitcount_ce0 = 1'b1;
    end else begin
        bitcount_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        distances_0_address0 = zext_ln43_reg_9038;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        distances_0_address0 = grp_merge_fu_4136_arr_0_address0;
    end else begin
        distances_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        distances_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        distances_0_ce0 = grp_merge_fu_4136_arr_0_ce0;
    end else begin
        distances_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        distances_0_d0 = zext_ln86_fu_6354_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        distances_0_d0 = grp_merge_fu_4136_arr_0_d0;
    end else begin
        distances_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state104) & (icmp_ln86_fu_6336_p2 == 1'd1))) begin
        distances_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        distances_0_we0 = grp_merge_fu_4136_arr_0_we0;
    end else begin
        distances_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        distances_1_address0 = zext_ln64_fu_6486_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        distances_1_address0 = zext_ln43_reg_9038;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        distances_1_address0 = grp_merge_fu_4136_arr_1_address0;
    end else begin
        distances_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state104))) begin
        distances_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        distances_1_ce0 = grp_merge_fu_4136_arr_1_ce0;
    end else begin
        distances_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        distances_1_d0 = sext_ln44_fu_6359_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        distances_1_d0 = grp_merge_fu_4136_arr_1_d0;
    end else begin
        distances_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state104) & (icmp_ln86_fu_6336_p2 == 1'd1))) begin
        distances_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        distances_1_we0 = grp_merge_fu_4136_arr_1_we0;
    end else begin
        distances_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        freq_address0 = freq_addr_1_reg_9141;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        freq_address0 = sext_ln65_fu_6514_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        freq_address0 = zext_ln58_fu_6466_p1;
    end else begin
        freq_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state110))) begin
        freq_ce0 = 1'b1;
    end else begin
        freq_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        freq_d0 = max_freq_fu_6519_p2;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        freq_d0 = 32'd0;
    end else begin
        freq_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state113) | ((icmp_ln57_fu_6454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state110)))) begin
        freq_we0 = 1'b1;
    end else begin
        freq_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        test_samples_data_address0 = zext_ln34_96_fu_5225_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        test_samples_data_address0 = zext_ln34_94_fu_5203_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        test_samples_data_address0 = zext_ln34_92_fu_5181_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        test_samples_data_address0 = zext_ln34_90_fu_5159_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        test_samples_data_address0 = zext_ln34_88_fu_5137_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        test_samples_data_address0 = zext_ln34_86_fu_5115_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        test_samples_data_address0 = zext_ln34_84_fu_5093_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        test_samples_data_address0 = zext_ln34_82_fu_5071_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        test_samples_data_address0 = zext_ln34_80_fu_5049_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        test_samples_data_address0 = zext_ln34_78_fu_5027_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        test_samples_data_address0 = zext_ln34_76_fu_5005_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        test_samples_data_address0 = zext_ln34_74_fu_4983_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        test_samples_data_address0 = zext_ln34_72_fu_4961_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        test_samples_data_address0 = zext_ln34_70_fu_4939_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        test_samples_data_address0 = zext_ln34_68_fu_4917_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        test_samples_data_address0 = zext_ln34_66_fu_4895_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        test_samples_data_address0 = zext_ln34_64_fu_4873_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        test_samples_data_address0 = zext_ln34_62_fu_4851_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        test_samples_data_address0 = zext_ln34_60_fu_4829_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        test_samples_data_address0 = zext_ln34_58_fu_4807_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        test_samples_data_address0 = zext_ln34_56_fu_4785_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        test_samples_data_address0 = zext_ln34_54_fu_4763_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        test_samples_data_address0 = zext_ln34_52_fu_4741_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        test_samples_data_address0 = zext_ln34_50_fu_4719_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        test_samples_data_address0 = zext_ln34_48_fu_4697_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        test_samples_data_address0 = zext_ln34_46_fu_4675_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        test_samples_data_address0 = zext_ln34_44_fu_4653_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        test_samples_data_address0 = zext_ln34_42_fu_4631_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        test_samples_data_address0 = zext_ln34_40_fu_4609_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        test_samples_data_address0 = zext_ln34_38_fu_4587_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        test_samples_data_address0 = zext_ln34_36_fu_4565_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        test_samples_data_address0 = zext_ln34_34_fu_4543_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        test_samples_data_address0 = zext_ln34_32_fu_4521_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        test_samples_data_address0 = zext_ln34_30_fu_4499_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        test_samples_data_address0 = zext_ln34_28_fu_4477_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        test_samples_data_address0 = zext_ln34_26_fu_4455_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        test_samples_data_address0 = zext_ln34_24_fu_4433_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        test_samples_data_address0 = zext_ln34_22_fu_4411_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        test_samples_data_address0 = zext_ln34_20_fu_4389_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        test_samples_data_address0 = zext_ln34_18_fu_4367_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        test_samples_data_address0 = zext_ln34_16_fu_4345_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        test_samples_data_address0 = zext_ln34_14_fu_4323_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        test_samples_data_address0 = zext_ln34_12_fu_4301_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        test_samples_data_address0 = zext_ln34_10_fu_4279_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        test_samples_data_address0 = zext_ln34_8_fu_4257_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        test_samples_data_address0 = zext_ln34_6_fu_4235_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        test_samples_data_address0 = zext_ln34_4_fu_4213_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        test_samples_data_address0 = zext_ln34_2_fu_4191_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        test_samples_data_address0 = zext_ln32_fu_4146_p1;
    end else begin
        test_samples_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        test_samples_data_address1 = zext_ln34_97_fu_5236_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        test_samples_data_address1 = zext_ln34_95_fu_5214_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        test_samples_data_address1 = zext_ln34_93_fu_5192_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        test_samples_data_address1 = zext_ln34_91_fu_5170_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        test_samples_data_address1 = zext_ln34_89_fu_5148_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        test_samples_data_address1 = zext_ln34_87_fu_5126_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        test_samples_data_address1 = zext_ln34_85_fu_5104_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        test_samples_data_address1 = zext_ln34_83_fu_5082_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        test_samples_data_address1 = zext_ln34_81_fu_5060_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        test_samples_data_address1 = zext_ln34_79_fu_5038_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        test_samples_data_address1 = zext_ln34_77_fu_5016_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        test_samples_data_address1 = zext_ln34_75_fu_4994_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        test_samples_data_address1 = zext_ln34_73_fu_4972_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        test_samples_data_address1 = zext_ln34_71_fu_4950_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        test_samples_data_address1 = zext_ln34_69_fu_4928_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        test_samples_data_address1 = zext_ln34_67_fu_4906_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        test_samples_data_address1 = zext_ln34_65_fu_4884_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        test_samples_data_address1 = zext_ln34_63_fu_4862_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        test_samples_data_address1 = zext_ln34_61_fu_4840_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        test_samples_data_address1 = zext_ln34_59_fu_4818_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        test_samples_data_address1 = zext_ln34_57_fu_4796_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        test_samples_data_address1 = zext_ln34_55_fu_4774_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        test_samples_data_address1 = zext_ln34_53_fu_4752_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        test_samples_data_address1 = zext_ln34_51_fu_4730_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        test_samples_data_address1 = zext_ln34_49_fu_4708_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        test_samples_data_address1 = zext_ln34_47_fu_4686_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        test_samples_data_address1 = zext_ln34_45_fu_4664_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        test_samples_data_address1 = zext_ln34_43_fu_4642_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        test_samples_data_address1 = zext_ln34_41_fu_4620_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        test_samples_data_address1 = zext_ln34_39_fu_4598_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        test_samples_data_address1 = zext_ln34_37_fu_4576_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        test_samples_data_address1 = zext_ln34_35_fu_4554_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        test_samples_data_address1 = zext_ln34_33_fu_4532_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        test_samples_data_address1 = zext_ln34_31_fu_4510_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        test_samples_data_address1 = zext_ln34_29_fu_4488_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        test_samples_data_address1 = zext_ln34_27_fu_4466_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        test_samples_data_address1 = zext_ln34_25_fu_4444_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        test_samples_data_address1 = zext_ln34_23_fu_4422_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        test_samples_data_address1 = zext_ln34_21_fu_4400_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        test_samples_data_address1 = zext_ln34_19_fu_4378_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        test_samples_data_address1 = zext_ln34_17_fu_4356_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        test_samples_data_address1 = zext_ln34_15_fu_4334_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        test_samples_data_address1 = zext_ln34_13_fu_4312_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        test_samples_data_address1 = zext_ln34_11_fu_4290_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        test_samples_data_address1 = zext_ln34_9_fu_4268_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        test_samples_data_address1 = zext_ln34_7_fu_4246_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        test_samples_data_address1 = zext_ln34_5_fu_4224_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        test_samples_data_address1 = zext_ln34_3_fu_4202_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        test_samples_data_address1 = zext_ln34_1_fu_4180_p1;
    end else begin
        test_samples_data_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        test_samples_data_ce0 = 1'b1;
    end else begin
        test_samples_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        test_samples_data_ce1 = 1'b1;
    end else begin
        test_samples_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        test_samples_label_ce0 = 1'b1;
    end else begin
        test_samples_label_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        train_samples_data_address0 = zext_ln43_96_fu_6315_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        train_samples_data_address0 = zext_ln43_94_fu_6293_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        train_samples_data_address0 = zext_ln43_92_fu_6271_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        train_samples_data_address0 = zext_ln43_90_fu_6249_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        train_samples_data_address0 = zext_ln43_88_fu_6227_p1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        train_samples_data_address0 = zext_ln43_86_fu_6205_p1;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        train_samples_data_address0 = zext_ln43_84_fu_6183_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        train_samples_data_address0 = zext_ln43_82_fu_6161_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        train_samples_data_address0 = zext_ln43_80_fu_6139_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        train_samples_data_address0 = zext_ln43_78_fu_6117_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        train_samples_data_address0 = zext_ln43_76_fu_6095_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        train_samples_data_address0 = zext_ln43_74_fu_6073_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        train_samples_data_address0 = zext_ln43_72_fu_6051_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        train_samples_data_address0 = zext_ln43_70_fu_6029_p1;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        train_samples_data_address0 = zext_ln43_68_fu_6007_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        train_samples_data_address0 = zext_ln43_66_fu_5985_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        train_samples_data_address0 = zext_ln43_64_fu_5963_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        train_samples_data_address0 = zext_ln43_62_fu_5941_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        train_samples_data_address0 = zext_ln43_60_fu_5919_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        train_samples_data_address0 = zext_ln43_58_fu_5897_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        train_samples_data_address0 = zext_ln43_56_fu_5875_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        train_samples_data_address0 = zext_ln43_54_fu_5853_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        train_samples_data_address0 = zext_ln43_52_fu_5831_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        train_samples_data_address0 = zext_ln43_50_fu_5809_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        train_samples_data_address0 = zext_ln43_48_fu_5787_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        train_samples_data_address0 = zext_ln43_46_fu_5765_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        train_samples_data_address0 = zext_ln43_44_fu_5743_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        train_samples_data_address0 = zext_ln43_42_fu_5721_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        train_samples_data_address0 = zext_ln43_40_fu_5699_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        train_samples_data_address0 = zext_ln43_38_fu_5677_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        train_samples_data_address0 = zext_ln43_36_fu_5655_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        train_samples_data_address0 = zext_ln43_34_fu_5633_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        train_samples_data_address0 = zext_ln43_32_fu_5611_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        train_samples_data_address0 = zext_ln43_30_fu_5589_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        train_samples_data_address0 = zext_ln43_28_fu_5567_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        train_samples_data_address0 = zext_ln43_26_fu_5545_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        train_samples_data_address0 = zext_ln43_24_fu_5523_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        train_samples_data_address0 = zext_ln43_22_fu_5501_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        train_samples_data_address0 = zext_ln43_20_fu_5479_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        train_samples_data_address0 = zext_ln43_18_fu_5457_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        train_samples_data_address0 = zext_ln43_16_fu_5435_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        train_samples_data_address0 = zext_ln43_14_fu_5413_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        train_samples_data_address0 = zext_ln43_12_fu_5391_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        train_samples_data_address0 = zext_ln43_10_fu_5369_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        train_samples_data_address0 = zext_ln43_8_fu_5347_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        train_samples_data_address0 = zext_ln43_6_fu_5325_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        train_samples_data_address0 = zext_ln43_4_fu_5303_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        train_samples_data_address0 = zext_ln43_2_fu_5281_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        train_samples_data_address0 = zext_ln41_fu_5241_p1;
    end else begin
        train_samples_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        train_samples_data_address1 = zext_ln43_97_fu_6326_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        train_samples_data_address1 = zext_ln43_95_fu_6304_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        train_samples_data_address1 = zext_ln43_93_fu_6282_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        train_samples_data_address1 = zext_ln43_91_fu_6260_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        train_samples_data_address1 = zext_ln43_89_fu_6238_p1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        train_samples_data_address1 = zext_ln43_87_fu_6216_p1;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        train_samples_data_address1 = zext_ln43_85_fu_6194_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        train_samples_data_address1 = zext_ln43_83_fu_6172_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        train_samples_data_address1 = zext_ln43_81_fu_6150_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        train_samples_data_address1 = zext_ln43_79_fu_6128_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        train_samples_data_address1 = zext_ln43_77_fu_6106_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        train_samples_data_address1 = zext_ln43_75_fu_6084_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        train_samples_data_address1 = zext_ln43_73_fu_6062_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        train_samples_data_address1 = zext_ln43_71_fu_6040_p1;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        train_samples_data_address1 = zext_ln43_69_fu_6018_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        train_samples_data_address1 = zext_ln43_67_fu_5996_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        train_samples_data_address1 = zext_ln43_65_fu_5974_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        train_samples_data_address1 = zext_ln43_63_fu_5952_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        train_samples_data_address1 = zext_ln43_61_fu_5930_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        train_samples_data_address1 = zext_ln43_59_fu_5908_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        train_samples_data_address1 = zext_ln43_57_fu_5886_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        train_samples_data_address1 = zext_ln43_55_fu_5864_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        train_samples_data_address1 = zext_ln43_53_fu_5842_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        train_samples_data_address1 = zext_ln43_51_fu_5820_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        train_samples_data_address1 = zext_ln43_49_fu_5798_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        train_samples_data_address1 = zext_ln43_47_fu_5776_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        train_samples_data_address1 = zext_ln43_45_fu_5754_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        train_samples_data_address1 = zext_ln43_43_fu_5732_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        train_samples_data_address1 = zext_ln43_41_fu_5710_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        train_samples_data_address1 = zext_ln43_39_fu_5688_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        train_samples_data_address1 = zext_ln43_37_fu_5666_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        train_samples_data_address1 = zext_ln43_35_fu_5644_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        train_samples_data_address1 = zext_ln43_33_fu_5622_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        train_samples_data_address1 = zext_ln43_31_fu_5600_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        train_samples_data_address1 = zext_ln43_29_fu_5578_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        train_samples_data_address1 = zext_ln43_27_fu_5556_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        train_samples_data_address1 = zext_ln43_25_fu_5534_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        train_samples_data_address1 = zext_ln43_23_fu_5512_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        train_samples_data_address1 = zext_ln43_21_fu_5490_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        train_samples_data_address1 = zext_ln43_19_fu_5468_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        train_samples_data_address1 = zext_ln43_17_fu_5446_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        train_samples_data_address1 = zext_ln43_15_fu_5424_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        train_samples_data_address1 = zext_ln43_13_fu_5402_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        train_samples_data_address1 = zext_ln43_11_fu_5380_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        train_samples_data_address1 = zext_ln43_9_fu_5358_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        train_samples_data_address1 = zext_ln43_7_fu_5336_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        train_samples_data_address1 = zext_ln43_5_fu_5314_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        train_samples_data_address1 = zext_ln43_3_fu_5292_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        train_samples_data_address1 = zext_ln43_1_fu_5270_p1;
    end else begin
        train_samples_data_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52))) begin
        train_samples_data_ce0 = 1'b1;
    end else begin
        train_samples_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52))) begin
        train_samples_data_ce1 = 1'b1;
    end else begin
        train_samples_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        train_samples_label_ce0 = 1'b1;
    end else begin
        train_samples_label_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln32_fu_4157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (icmp_ln41_fu_5252_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            if (((1'b1 == ap_CS_fsm_state104) & (icmp_ln86_fu_6336_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state107 : begin
            if (((1'b1 == ap_CS_fsm_state107) & (icmp_ln22_fu_6384_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        ap_ST_fsm_state108 : begin
            if (((icmp_ln26_fu_6396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state109 : begin
            if (((1'b1 == ap_CS_fsm_state109) & (grp_merge_fu_4136_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state110 : begin
            if (((1'b1 == ap_CS_fsm_state110) & (icmp_ln57_fu_6454_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state111 : begin
            if (((icmp_ln62_fu_6475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln30_1_fu_6408_p2 = (add_ln30_fu_6402_p2 + curr_size_0_i_reg_4066);

assign add_ln30_fu_6402_p2 = ($signed(left_start_0_i_reg_4078) + $signed(32'd4294967295));

assign add_ln32_1_fu_4151_p2 = (phi_mul1_reg_4007 + 20'd98);

assign add_ln32_fu_6429_p2 = (add_ln30_fu_6402_p2 + curr_size_reg_9085);

assign add_ln34_10_fu_4295_p2 = (phi_mul1_reg_4007 + 20'd12);

assign add_ln34_11_fu_4306_p2 = (phi_mul1_reg_4007 + 20'd13);

assign add_ln34_12_fu_4317_p2 = (phi_mul1_reg_4007 + 20'd14);

assign add_ln34_13_fu_4328_p2 = (phi_mul1_reg_4007 + 20'd15);

assign add_ln34_14_fu_4339_p2 = (phi_mul1_reg_4007 + 20'd16);

assign add_ln34_15_fu_4350_p2 = (phi_mul1_reg_4007 + 20'd17);

assign add_ln34_16_fu_4361_p2 = (phi_mul1_reg_4007 + 20'd18);

assign add_ln34_17_fu_4372_p2 = (phi_mul1_reg_4007 + 20'd19);

assign add_ln34_18_fu_4383_p2 = (phi_mul1_reg_4007 + 20'd20);

assign add_ln34_19_fu_4394_p2 = (phi_mul1_reg_4007 + 20'd21);

assign add_ln34_1_fu_4196_p2 = (phi_mul1_reg_4007 + 20'd3);

assign add_ln34_20_fu_4405_p2 = (phi_mul1_reg_4007 + 20'd22);

assign add_ln34_21_fu_4416_p2 = (phi_mul1_reg_4007 + 20'd23);

assign add_ln34_22_fu_4427_p2 = (phi_mul1_reg_4007 + 20'd24);

assign add_ln34_23_fu_4438_p2 = (phi_mul1_reg_4007 + 20'd25);

assign add_ln34_24_fu_4449_p2 = (phi_mul1_reg_4007 + 20'd26);

assign add_ln34_25_fu_4460_p2 = (phi_mul1_reg_4007 + 20'd27);

assign add_ln34_26_fu_4471_p2 = (phi_mul1_reg_4007 + 20'd28);

assign add_ln34_27_fu_4482_p2 = (phi_mul1_reg_4007 + 20'd29);

assign add_ln34_28_fu_4493_p2 = (phi_mul1_reg_4007 + 20'd30);

assign add_ln34_29_fu_4504_p2 = (phi_mul1_reg_4007 + 20'd31);

assign add_ln34_2_fu_4207_p2 = (phi_mul1_reg_4007 + 20'd4);

assign add_ln34_30_fu_4515_p2 = (phi_mul1_reg_4007 + 20'd32);

assign add_ln34_31_fu_4526_p2 = (phi_mul1_reg_4007 + 20'd33);

assign add_ln34_32_fu_4537_p2 = (phi_mul1_reg_4007 + 20'd34);

assign add_ln34_33_fu_4548_p2 = (phi_mul1_reg_4007 + 20'd35);

assign add_ln34_34_fu_4559_p2 = (phi_mul1_reg_4007 + 20'd36);

assign add_ln34_35_fu_4570_p2 = (phi_mul1_reg_4007 + 20'd37);

assign add_ln34_36_fu_4581_p2 = (phi_mul1_reg_4007 + 20'd38);

assign add_ln34_37_fu_4592_p2 = (phi_mul1_reg_4007 + 20'd39);

assign add_ln34_38_fu_4603_p2 = (phi_mul1_reg_4007 + 20'd40);

assign add_ln34_39_fu_4614_p2 = (phi_mul1_reg_4007 + 20'd41);

assign add_ln34_3_fu_4218_p2 = (phi_mul1_reg_4007 + 20'd5);

assign add_ln34_40_fu_4625_p2 = (phi_mul1_reg_4007 + 20'd42);

assign add_ln34_41_fu_4636_p2 = (phi_mul1_reg_4007 + 20'd43);

assign add_ln34_42_fu_4647_p2 = (phi_mul1_reg_4007 + 20'd44);

assign add_ln34_43_fu_4658_p2 = (phi_mul1_reg_4007 + 20'd45);

assign add_ln34_44_fu_4669_p2 = (phi_mul1_reg_4007 + 20'd46);

assign add_ln34_45_fu_4680_p2 = (phi_mul1_reg_4007 + 20'd47);

assign add_ln34_46_fu_4691_p2 = (phi_mul1_reg_4007 + 20'd48);

assign add_ln34_47_fu_4702_p2 = (phi_mul1_reg_4007 + 20'd49);

assign add_ln34_48_fu_4713_p2 = (phi_mul1_reg_4007 + 20'd50);

assign add_ln34_49_fu_4724_p2 = (phi_mul1_reg_4007 + 20'd51);

assign add_ln34_4_fu_4229_p2 = (phi_mul1_reg_4007 + 20'd6);

assign add_ln34_50_fu_4735_p2 = (phi_mul1_reg_4007 + 20'd52);

assign add_ln34_51_fu_4746_p2 = (phi_mul1_reg_4007 + 20'd53);

assign add_ln34_52_fu_4757_p2 = (phi_mul1_reg_4007 + 20'd54);

assign add_ln34_53_fu_4768_p2 = (phi_mul1_reg_4007 + 20'd55);

assign add_ln34_54_fu_4779_p2 = (phi_mul1_reg_4007 + 20'd56);

assign add_ln34_55_fu_4790_p2 = (phi_mul1_reg_4007 + 20'd57);

assign add_ln34_56_fu_4801_p2 = (phi_mul1_reg_4007 + 20'd58);

assign add_ln34_57_fu_4812_p2 = (phi_mul1_reg_4007 + 20'd59);

assign add_ln34_58_fu_4823_p2 = (phi_mul1_reg_4007 + 20'd60);

assign add_ln34_59_fu_4834_p2 = (phi_mul1_reg_4007 + 20'd61);

assign add_ln34_5_fu_4240_p2 = (phi_mul1_reg_4007 + 20'd7);

assign add_ln34_60_fu_4845_p2 = (phi_mul1_reg_4007 + 20'd62);

assign add_ln34_61_fu_4856_p2 = (phi_mul1_reg_4007 + 20'd63);

assign add_ln34_62_fu_4867_p2 = (phi_mul1_reg_4007 + 20'd64);

assign add_ln34_63_fu_4878_p2 = (phi_mul1_reg_4007 + 20'd65);

assign add_ln34_64_fu_4889_p2 = (phi_mul1_reg_4007 + 20'd66);

assign add_ln34_65_fu_4900_p2 = (phi_mul1_reg_4007 + 20'd67);

assign add_ln34_66_fu_4911_p2 = (phi_mul1_reg_4007 + 20'd68);

assign add_ln34_67_fu_4922_p2 = (phi_mul1_reg_4007 + 20'd69);

assign add_ln34_68_fu_4933_p2 = (phi_mul1_reg_4007 + 20'd70);

assign add_ln34_69_fu_4944_p2 = (phi_mul1_reg_4007 + 20'd71);

assign add_ln34_6_fu_4251_p2 = (phi_mul1_reg_4007 + 20'd8);

assign add_ln34_70_fu_4955_p2 = (phi_mul1_reg_4007 + 20'd72);

assign add_ln34_71_fu_4966_p2 = (phi_mul1_reg_4007 + 20'd73);

assign add_ln34_72_fu_4977_p2 = (phi_mul1_reg_4007 + 20'd74);

assign add_ln34_73_fu_4988_p2 = (phi_mul1_reg_4007 + 20'd75);

assign add_ln34_74_fu_4999_p2 = (phi_mul1_reg_4007 + 20'd76);

assign add_ln34_75_fu_5010_p2 = (phi_mul1_reg_4007 + 20'd77);

assign add_ln34_76_fu_5021_p2 = (phi_mul1_reg_4007 + 20'd78);

assign add_ln34_77_fu_5032_p2 = (phi_mul1_reg_4007 + 20'd79);

assign add_ln34_78_fu_5043_p2 = (phi_mul1_reg_4007 + 20'd80);

assign add_ln34_79_fu_5054_p2 = (phi_mul1_reg_4007 + 20'd81);

assign add_ln34_7_fu_4262_p2 = (phi_mul1_reg_4007 + 20'd9);

assign add_ln34_80_fu_5065_p2 = (phi_mul1_reg_4007 + 20'd82);

assign add_ln34_81_fu_5076_p2 = (phi_mul1_reg_4007 + 20'd83);

assign add_ln34_82_fu_5087_p2 = (phi_mul1_reg_4007 + 20'd84);

assign add_ln34_83_fu_5098_p2 = (phi_mul1_reg_4007 + 20'd85);

assign add_ln34_84_fu_5109_p2 = (phi_mul1_reg_4007 + 20'd86);

assign add_ln34_85_fu_5120_p2 = (phi_mul1_reg_4007 + 20'd87);

assign add_ln34_86_fu_5131_p2 = (phi_mul1_reg_4007 + 20'd88);

assign add_ln34_87_fu_5142_p2 = (phi_mul1_reg_4007 + 20'd89);

assign add_ln34_88_fu_5153_p2 = (phi_mul1_reg_4007 + 20'd90);

assign add_ln34_89_fu_5164_p2 = (phi_mul1_reg_4007 + 20'd91);

assign add_ln34_8_fu_4273_p2 = (phi_mul1_reg_4007 + 20'd10);

assign add_ln34_90_fu_5175_p2 = (phi_mul1_reg_4007 + 20'd92);

assign add_ln34_91_fu_5186_p2 = (phi_mul1_reg_4007 + 20'd93);

assign add_ln34_92_fu_5197_p2 = (phi_mul1_reg_4007 + 20'd94);

assign add_ln34_93_fu_5208_p2 = (phi_mul1_reg_4007 + 20'd95);

assign add_ln34_94_fu_5219_p2 = (phi_mul1_reg_4007 + 20'd96);

assign add_ln34_95_fu_5230_p2 = (phi_mul1_reg_4007 + 20'd97);

assign add_ln34_9_fu_4284_p2 = (phi_mul1_reg_4007 + 20'd11);

assign add_ln34_fu_4185_p2 = (phi_mul1_reg_4007 + 20'd2);

assign add_ln41_fu_5246_p2 = (phi_mul_reg_4031 + 23'd98);

assign add_ln43_10_fu_5385_p2 = (phi_mul_reg_4031 + 23'd12);

assign add_ln43_11_fu_5396_p2 = (phi_mul_reg_4031 + 23'd13);

assign add_ln43_12_fu_5407_p2 = (phi_mul_reg_4031 + 23'd14);

assign add_ln43_13_fu_5418_p2 = (phi_mul_reg_4031 + 23'd15);

assign add_ln43_14_fu_5429_p2 = (phi_mul_reg_4031 + 23'd16);

assign add_ln43_15_fu_5440_p2 = (phi_mul_reg_4031 + 23'd17);

assign add_ln43_16_fu_5451_p2 = (phi_mul_reg_4031 + 23'd18);

assign add_ln43_17_fu_5462_p2 = (phi_mul_reg_4031 + 23'd19);

assign add_ln43_18_fu_5473_p2 = (phi_mul_reg_4031 + 23'd20);

assign add_ln43_19_fu_5484_p2 = (phi_mul_reg_4031 + 23'd21);

assign add_ln43_1_fu_5286_p2 = (phi_mul_reg_4031 + 23'd3);

assign add_ln43_20_fu_5495_p2 = (phi_mul_reg_4031 + 23'd22);

assign add_ln43_21_fu_5506_p2 = (phi_mul_reg_4031 + 23'd23);

assign add_ln43_22_fu_5517_p2 = (phi_mul_reg_4031 + 23'd24);

assign add_ln43_23_fu_5528_p2 = (phi_mul_reg_4031 + 23'd25);

assign add_ln43_24_fu_5539_p2 = (phi_mul_reg_4031 + 23'd26);

assign add_ln43_25_fu_5550_p2 = (phi_mul_reg_4031 + 23'd27);

assign add_ln43_26_fu_5561_p2 = (phi_mul_reg_4031 + 23'd28);

assign add_ln43_27_fu_5572_p2 = (phi_mul_reg_4031 + 23'd29);

assign add_ln43_28_fu_5583_p2 = (phi_mul_reg_4031 + 23'd30);

assign add_ln43_29_fu_5594_p2 = (phi_mul_reg_4031 + 23'd31);

assign add_ln43_2_fu_5297_p2 = (phi_mul_reg_4031 + 23'd4);

assign add_ln43_30_fu_5605_p2 = (phi_mul_reg_4031 + 23'd32);

assign add_ln43_31_fu_5616_p2 = (phi_mul_reg_4031 + 23'd33);

assign add_ln43_32_fu_5627_p2 = (phi_mul_reg_4031 + 23'd34);

assign add_ln43_33_fu_5638_p2 = (phi_mul_reg_4031 + 23'd35);

assign add_ln43_34_fu_5649_p2 = (phi_mul_reg_4031 + 23'd36);

assign add_ln43_35_fu_5660_p2 = (phi_mul_reg_4031 + 23'd37);

assign add_ln43_36_fu_5671_p2 = (phi_mul_reg_4031 + 23'd38);

assign add_ln43_37_fu_5682_p2 = (phi_mul_reg_4031 + 23'd39);

assign add_ln43_38_fu_5693_p2 = (phi_mul_reg_4031 + 23'd40);

assign add_ln43_39_fu_5704_p2 = (phi_mul_reg_4031 + 23'd41);

assign add_ln43_3_fu_5308_p2 = (phi_mul_reg_4031 + 23'd5);

assign add_ln43_40_fu_5715_p2 = (phi_mul_reg_4031 + 23'd42);

assign add_ln43_41_fu_5726_p2 = (phi_mul_reg_4031 + 23'd43);

assign add_ln43_42_fu_5737_p2 = (phi_mul_reg_4031 + 23'd44);

assign add_ln43_43_fu_5748_p2 = (phi_mul_reg_4031 + 23'd45);

assign add_ln43_44_fu_5759_p2 = (phi_mul_reg_4031 + 23'd46);

assign add_ln43_45_fu_5770_p2 = (phi_mul_reg_4031 + 23'd47);

assign add_ln43_46_fu_5781_p2 = (phi_mul_reg_4031 + 23'd48);

assign add_ln43_47_fu_5792_p2 = (phi_mul_reg_4031 + 23'd49);

assign add_ln43_48_fu_5803_p2 = (phi_mul_reg_4031 + 23'd50);

assign add_ln43_49_fu_5814_p2 = (phi_mul_reg_4031 + 23'd51);

assign add_ln43_4_fu_5319_p2 = (phi_mul_reg_4031 + 23'd6);

assign add_ln43_50_fu_5825_p2 = (phi_mul_reg_4031 + 23'd52);

assign add_ln43_51_fu_5836_p2 = (phi_mul_reg_4031 + 23'd53);

assign add_ln43_52_fu_5847_p2 = (phi_mul_reg_4031 + 23'd54);

assign add_ln43_53_fu_5858_p2 = (phi_mul_reg_4031 + 23'd55);

assign add_ln43_54_fu_5869_p2 = (phi_mul_reg_4031 + 23'd56);

assign add_ln43_55_fu_5880_p2 = (phi_mul_reg_4031 + 23'd57);

assign add_ln43_56_fu_5891_p2 = (phi_mul_reg_4031 + 23'd58);

assign add_ln43_57_fu_5902_p2 = (phi_mul_reg_4031 + 23'd59);

assign add_ln43_58_fu_5913_p2 = (phi_mul_reg_4031 + 23'd60);

assign add_ln43_59_fu_5924_p2 = (phi_mul_reg_4031 + 23'd61);

assign add_ln43_5_fu_5330_p2 = (phi_mul_reg_4031 + 23'd7);

assign add_ln43_60_fu_5935_p2 = (phi_mul_reg_4031 + 23'd62);

assign add_ln43_61_fu_5946_p2 = (phi_mul_reg_4031 + 23'd63);

assign add_ln43_62_fu_5957_p2 = (phi_mul_reg_4031 + 23'd64);

assign add_ln43_63_fu_5968_p2 = (phi_mul_reg_4031 + 23'd65);

assign add_ln43_64_fu_5979_p2 = (phi_mul_reg_4031 + 23'd66);

assign add_ln43_65_fu_5990_p2 = (phi_mul_reg_4031 + 23'd67);

assign add_ln43_66_fu_6001_p2 = (phi_mul_reg_4031 + 23'd68);

assign add_ln43_67_fu_6012_p2 = (phi_mul_reg_4031 + 23'd69);

assign add_ln43_68_fu_6023_p2 = (phi_mul_reg_4031 + 23'd70);

assign add_ln43_69_fu_6034_p2 = (phi_mul_reg_4031 + 23'd71);

assign add_ln43_6_fu_5341_p2 = (phi_mul_reg_4031 + 23'd8);

assign add_ln43_70_fu_6045_p2 = (phi_mul_reg_4031 + 23'd72);

assign add_ln43_71_fu_6056_p2 = (phi_mul_reg_4031 + 23'd73);

assign add_ln43_72_fu_6067_p2 = (phi_mul_reg_4031 + 23'd74);

assign add_ln43_73_fu_6078_p2 = (phi_mul_reg_4031 + 23'd75);

assign add_ln43_74_fu_6089_p2 = (phi_mul_reg_4031 + 23'd76);

assign add_ln43_75_fu_6100_p2 = (phi_mul_reg_4031 + 23'd77);

assign add_ln43_76_fu_6111_p2 = (phi_mul_reg_4031 + 23'd78);

assign add_ln43_77_fu_6122_p2 = (phi_mul_reg_4031 + 23'd79);

assign add_ln43_78_fu_6133_p2 = (phi_mul_reg_4031 + 23'd80);

assign add_ln43_79_fu_6144_p2 = (phi_mul_reg_4031 + 23'd81);

assign add_ln43_7_fu_5352_p2 = (phi_mul_reg_4031 + 23'd9);

assign add_ln43_80_fu_6155_p2 = (phi_mul_reg_4031 + 23'd82);

assign add_ln43_81_fu_6166_p2 = (phi_mul_reg_4031 + 23'd83);

assign add_ln43_82_fu_6177_p2 = (phi_mul_reg_4031 + 23'd84);

assign add_ln43_83_fu_6188_p2 = (phi_mul_reg_4031 + 23'd85);

assign add_ln43_84_fu_6199_p2 = (phi_mul_reg_4031 + 23'd86);

assign add_ln43_85_fu_6210_p2 = (phi_mul_reg_4031 + 23'd87);

assign add_ln43_86_fu_6221_p2 = (phi_mul_reg_4031 + 23'd88);

assign add_ln43_87_fu_6232_p2 = (phi_mul_reg_4031 + 23'd89);

assign add_ln43_88_fu_6243_p2 = (phi_mul_reg_4031 + 23'd90);

assign add_ln43_89_fu_6254_p2 = (phi_mul_reg_4031 + 23'd91);

assign add_ln43_8_fu_5363_p2 = (phi_mul_reg_4031 + 23'd10);

assign add_ln43_90_fu_6265_p2 = (phi_mul_reg_4031 + 23'd92);

assign add_ln43_91_fu_6276_p2 = (phi_mul_reg_4031 + 23'd93);

assign add_ln43_92_fu_6287_p2 = (phi_mul_reg_4031 + 23'd94);

assign add_ln43_93_fu_6298_p2 = (phi_mul_reg_4031 + 23'd95);

assign add_ln43_94_fu_6309_p2 = (phi_mul_reg_4031 + 23'd96);

assign add_ln43_95_fu_6320_p2 = (phi_mul_reg_4031 + 23'd97);

assign add_ln43_9_fu_5374_p2 = (phi_mul_reg_4031 + 23'd11);

assign add_ln43_fu_5275_p2 = (phi_mul_reg_4031 + 23'd2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_return = num_matches_0_reg_3995;

assign bitcount_address0 = zext_ln87_1_fu_6369_p1;

assign curr_size_fu_6390_p2 = curr_size_0_i_reg_4066 << 32'd1;

assign distance_fu_6378_p2 = (zext_ln87_2_fu_6374_p1 + distance_0_i_reg_4054);

assign grp_merge_fu_4136_ap_start = grp_merge_fu_4136_ap_start_reg;

assign i_5_fu_4163_p2 = (i_0_reg_3984 + 14'd1);

assign i_fu_6342_p2 = (i_0_i_reg_4043 + 7'd1);

assign icmp_ln22_fu_6384_p2 = (($signed(curr_size_0_i_reg_4066) > $signed(32'd59999)) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_6396_p2 = (($signed(left_start_0_i_reg_4078) < $signed(32'd59999)) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_4157_p2 = ((i_0_reg_3984 == 14'd10000) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_5252_p2 = ((j_0_reg_4019 == 16'd60000) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_6454_p2 = ((j1_0_reg_4090 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_6475_p2 = (($signed(zext_ln62_fu_6471_p1) < $signed(k)) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_6526_p2 = (($signed(max_freq_fu_6519_p2) > $signed(max_freq_0_reg_4101)) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_6494_p2 = ((sext_ln74_fu_6491_p1 == most_freq_0_reg_4113) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_6336_p2 = ((i_0_i_reg_4043 == 7'd98) ? 1'b1 : 1'b0);

assign icmp_ln8_1_fu_6434_p2 = (($signed(add_ln32_fu_6429_p2) < $signed(32'd59999)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_6414_p2 = (($signed(add_ln30_1_fu_6408_p2) < $signed(32'd59999)) ? 1'b1 : 1'b0);

assign j_5_fu_6460_p2 = (j1_0_reg_4090 + 4'd1);

assign j_6_fu_6480_p2 = (j2_0_reg_4125 + 31'd1);

assign j_fu_5258_p2 = (j_0_reg_4019 + 16'd1);

assign left_start_fu_6449_p2 = (curr_size_reg_9085 + left_start_0_i_reg_4078);

assign max_freq_fu_6519_p2 = (freq_q0 + 32'd1);

assign mid_fu_6420_p3 = ((icmp_ln8_fu_6414_p2[0:0] === 1'b1) ? add_ln30_1_fu_6408_p2 : 32'd59999);

assign num_matches_fu_6500_p2 = (num_matches_0_reg_3995 + 32'd1);

assign or_ln34_fu_4174_p2 = (phi_mul1_reg_4007 | 20'd1);

assign or_ln43_fu_5264_p2 = (phi_mul_reg_4031 | 23'd1);

assign right_end_fu_6440_p3 = ((icmp_ln8_1_fu_6434_p2[0:0] === 1'b1) ? add_ln32_fu_6429_p2 : 32'd59999);

assign select_ln66_1_fu_6540_p3 = ((icmp_ln66_fu_6526_p2[0:0] === 1'b1) ? most_freq_reg_9136 : most_freq_0_reg_4113);

assign select_ln66_fu_6532_p3 = ((icmp_ln66_fu_6526_p2[0:0] === 1'b1) ? max_freq_fu_6519_p2 : max_freq_0_reg_4101);

assign select_ln74_fu_6506_p3 = ((icmp_ln74_fu_6494_p2[0:0] === 1'b1) ? num_matches_fu_6500_p2 : num_matches_0_reg_3995);

assign sext_ln44_fu_6359_p1 = $signed(train_samples_label_1_reg_9049);

assign sext_ln65_fu_6514_p0 = distances_1_q0;

assign sext_ln65_fu_6514_p1 = sext_ln65_fu_6514_p0;

assign sext_ln74_fu_6491_p1 = $signed(test_sample_label_reg_7570);

assign test_samples_label_address0 = zext_ln34_fu_4169_p1;

assign train_samples_label_address0 = zext_ln43_fu_6331_p1;

assign xor_ln87_fu_6363_p2 = (b_data_assign_q0 ^ a_data_assign_q0);

assign zext_ln32_fu_4146_p1 = phi_mul1_reg_4007;

assign zext_ln34_10_fu_4279_p1 = add_ln34_8_fu_4273_p2;

assign zext_ln34_11_fu_4290_p1 = add_ln34_9_fu_4284_p2;

assign zext_ln34_12_fu_4301_p1 = add_ln34_10_fu_4295_p2;

assign zext_ln34_13_fu_4312_p1 = add_ln34_11_fu_4306_p2;

assign zext_ln34_14_fu_4323_p1 = add_ln34_12_fu_4317_p2;

assign zext_ln34_15_fu_4334_p1 = add_ln34_13_fu_4328_p2;

assign zext_ln34_16_fu_4345_p1 = add_ln34_14_fu_4339_p2;

assign zext_ln34_17_fu_4356_p1 = add_ln34_15_fu_4350_p2;

assign zext_ln34_18_fu_4367_p1 = add_ln34_16_fu_4361_p2;

assign zext_ln34_19_fu_4378_p1 = add_ln34_17_fu_4372_p2;

assign zext_ln34_1_fu_4180_p1 = or_ln34_fu_4174_p2;

assign zext_ln34_20_fu_4389_p1 = add_ln34_18_fu_4383_p2;

assign zext_ln34_21_fu_4400_p1 = add_ln34_19_fu_4394_p2;

assign zext_ln34_22_fu_4411_p1 = add_ln34_20_fu_4405_p2;

assign zext_ln34_23_fu_4422_p1 = add_ln34_21_fu_4416_p2;

assign zext_ln34_24_fu_4433_p1 = add_ln34_22_fu_4427_p2;

assign zext_ln34_25_fu_4444_p1 = add_ln34_23_fu_4438_p2;

assign zext_ln34_26_fu_4455_p1 = add_ln34_24_fu_4449_p2;

assign zext_ln34_27_fu_4466_p1 = add_ln34_25_fu_4460_p2;

assign zext_ln34_28_fu_4477_p1 = add_ln34_26_fu_4471_p2;

assign zext_ln34_29_fu_4488_p1 = add_ln34_27_fu_4482_p2;

assign zext_ln34_2_fu_4191_p1 = add_ln34_fu_4185_p2;

assign zext_ln34_30_fu_4499_p1 = add_ln34_28_fu_4493_p2;

assign zext_ln34_31_fu_4510_p1 = add_ln34_29_fu_4504_p2;

assign zext_ln34_32_fu_4521_p1 = add_ln34_30_fu_4515_p2;

assign zext_ln34_33_fu_4532_p1 = add_ln34_31_fu_4526_p2;

assign zext_ln34_34_fu_4543_p1 = add_ln34_32_fu_4537_p2;

assign zext_ln34_35_fu_4554_p1 = add_ln34_33_fu_4548_p2;

assign zext_ln34_36_fu_4565_p1 = add_ln34_34_fu_4559_p2;

assign zext_ln34_37_fu_4576_p1 = add_ln34_35_fu_4570_p2;

assign zext_ln34_38_fu_4587_p1 = add_ln34_36_fu_4581_p2;

assign zext_ln34_39_fu_4598_p1 = add_ln34_37_fu_4592_p2;

assign zext_ln34_3_fu_4202_p1 = add_ln34_1_fu_4196_p2;

assign zext_ln34_40_fu_4609_p1 = add_ln34_38_fu_4603_p2;

assign zext_ln34_41_fu_4620_p1 = add_ln34_39_fu_4614_p2;

assign zext_ln34_42_fu_4631_p1 = add_ln34_40_fu_4625_p2;

assign zext_ln34_43_fu_4642_p1 = add_ln34_41_fu_4636_p2;

assign zext_ln34_44_fu_4653_p1 = add_ln34_42_fu_4647_p2;

assign zext_ln34_45_fu_4664_p1 = add_ln34_43_fu_4658_p2;

assign zext_ln34_46_fu_4675_p1 = add_ln34_44_fu_4669_p2;

assign zext_ln34_47_fu_4686_p1 = add_ln34_45_fu_4680_p2;

assign zext_ln34_48_fu_4697_p1 = add_ln34_46_fu_4691_p2;

assign zext_ln34_49_fu_4708_p1 = add_ln34_47_fu_4702_p2;

assign zext_ln34_4_fu_4213_p1 = add_ln34_2_fu_4207_p2;

assign zext_ln34_50_fu_4719_p1 = add_ln34_48_fu_4713_p2;

assign zext_ln34_51_fu_4730_p1 = add_ln34_49_fu_4724_p2;

assign zext_ln34_52_fu_4741_p1 = add_ln34_50_fu_4735_p2;

assign zext_ln34_53_fu_4752_p1 = add_ln34_51_fu_4746_p2;

assign zext_ln34_54_fu_4763_p1 = add_ln34_52_fu_4757_p2;

assign zext_ln34_55_fu_4774_p1 = add_ln34_53_fu_4768_p2;

assign zext_ln34_56_fu_4785_p1 = add_ln34_54_fu_4779_p2;

assign zext_ln34_57_fu_4796_p1 = add_ln34_55_fu_4790_p2;

assign zext_ln34_58_fu_4807_p1 = add_ln34_56_fu_4801_p2;

assign zext_ln34_59_fu_4818_p1 = add_ln34_57_fu_4812_p2;

assign zext_ln34_5_fu_4224_p1 = add_ln34_3_fu_4218_p2;

assign zext_ln34_60_fu_4829_p1 = add_ln34_58_fu_4823_p2;

assign zext_ln34_61_fu_4840_p1 = add_ln34_59_fu_4834_p2;

assign zext_ln34_62_fu_4851_p1 = add_ln34_60_fu_4845_p2;

assign zext_ln34_63_fu_4862_p1 = add_ln34_61_fu_4856_p2;

assign zext_ln34_64_fu_4873_p1 = add_ln34_62_fu_4867_p2;

assign zext_ln34_65_fu_4884_p1 = add_ln34_63_fu_4878_p2;

assign zext_ln34_66_fu_4895_p1 = add_ln34_64_fu_4889_p2;

assign zext_ln34_67_fu_4906_p1 = add_ln34_65_fu_4900_p2;

assign zext_ln34_68_fu_4917_p1 = add_ln34_66_fu_4911_p2;

assign zext_ln34_69_fu_4928_p1 = add_ln34_67_fu_4922_p2;

assign zext_ln34_6_fu_4235_p1 = add_ln34_4_fu_4229_p2;

assign zext_ln34_70_fu_4939_p1 = add_ln34_68_fu_4933_p2;

assign zext_ln34_71_fu_4950_p1 = add_ln34_69_fu_4944_p2;

assign zext_ln34_72_fu_4961_p1 = add_ln34_70_fu_4955_p2;

assign zext_ln34_73_fu_4972_p1 = add_ln34_71_fu_4966_p2;

assign zext_ln34_74_fu_4983_p1 = add_ln34_72_fu_4977_p2;

assign zext_ln34_75_fu_4994_p1 = add_ln34_73_fu_4988_p2;

assign zext_ln34_76_fu_5005_p1 = add_ln34_74_fu_4999_p2;

assign zext_ln34_77_fu_5016_p1 = add_ln34_75_fu_5010_p2;

assign zext_ln34_78_fu_5027_p1 = add_ln34_76_fu_5021_p2;

assign zext_ln34_79_fu_5038_p1 = add_ln34_77_fu_5032_p2;

assign zext_ln34_7_fu_4246_p1 = add_ln34_5_fu_4240_p2;

assign zext_ln34_80_fu_5049_p1 = add_ln34_78_fu_5043_p2;

assign zext_ln34_81_fu_5060_p1 = add_ln34_79_fu_5054_p2;

assign zext_ln34_82_fu_5071_p1 = add_ln34_80_fu_5065_p2;

assign zext_ln34_83_fu_5082_p1 = add_ln34_81_fu_5076_p2;

assign zext_ln34_84_fu_5093_p1 = add_ln34_82_fu_5087_p2;

assign zext_ln34_85_fu_5104_p1 = add_ln34_83_fu_5098_p2;

assign zext_ln34_86_fu_5115_p1 = add_ln34_84_fu_5109_p2;

assign zext_ln34_87_fu_5126_p1 = add_ln34_85_fu_5120_p2;

assign zext_ln34_88_fu_5137_p1 = add_ln34_86_fu_5131_p2;

assign zext_ln34_89_fu_5148_p1 = add_ln34_87_fu_5142_p2;

assign zext_ln34_8_fu_4257_p1 = add_ln34_6_fu_4251_p2;

assign zext_ln34_90_fu_5159_p1 = add_ln34_88_fu_5153_p2;

assign zext_ln34_91_fu_5170_p1 = add_ln34_89_fu_5164_p2;

assign zext_ln34_92_fu_5181_p1 = add_ln34_90_fu_5175_p2;

assign zext_ln34_93_fu_5192_p1 = add_ln34_91_fu_5186_p2;

assign zext_ln34_94_fu_5203_p1 = add_ln34_92_fu_5197_p2;

assign zext_ln34_95_fu_5214_p1 = add_ln34_93_fu_5208_p2;

assign zext_ln34_96_fu_5225_p1 = add_ln34_94_fu_5219_p2;

assign zext_ln34_97_fu_5236_p1 = add_ln34_95_fu_5230_p2;

assign zext_ln34_9_fu_4268_p1 = add_ln34_7_fu_4262_p2;

assign zext_ln34_fu_4169_p1 = i_0_reg_3984;

assign zext_ln41_fu_5241_p1 = phi_mul_reg_4031;

assign zext_ln43_10_fu_5369_p1 = add_ln43_8_fu_5363_p2;

assign zext_ln43_11_fu_5380_p1 = add_ln43_9_fu_5374_p2;

assign zext_ln43_12_fu_5391_p1 = add_ln43_10_fu_5385_p2;

assign zext_ln43_13_fu_5402_p1 = add_ln43_11_fu_5396_p2;

assign zext_ln43_14_fu_5413_p1 = add_ln43_12_fu_5407_p2;

assign zext_ln43_15_fu_5424_p1 = add_ln43_13_fu_5418_p2;

assign zext_ln43_16_fu_5435_p1 = add_ln43_14_fu_5429_p2;

assign zext_ln43_17_fu_5446_p1 = add_ln43_15_fu_5440_p2;

assign zext_ln43_18_fu_5457_p1 = add_ln43_16_fu_5451_p2;

assign zext_ln43_19_fu_5468_p1 = add_ln43_17_fu_5462_p2;

assign zext_ln43_1_fu_5270_p1 = or_ln43_fu_5264_p2;

assign zext_ln43_20_fu_5479_p1 = add_ln43_18_fu_5473_p2;

assign zext_ln43_21_fu_5490_p1 = add_ln43_19_fu_5484_p2;

assign zext_ln43_22_fu_5501_p1 = add_ln43_20_fu_5495_p2;

assign zext_ln43_23_fu_5512_p1 = add_ln43_21_fu_5506_p2;

assign zext_ln43_24_fu_5523_p1 = add_ln43_22_fu_5517_p2;

assign zext_ln43_25_fu_5534_p1 = add_ln43_23_fu_5528_p2;

assign zext_ln43_26_fu_5545_p1 = add_ln43_24_fu_5539_p2;

assign zext_ln43_27_fu_5556_p1 = add_ln43_25_fu_5550_p2;

assign zext_ln43_28_fu_5567_p1 = add_ln43_26_fu_5561_p2;

assign zext_ln43_29_fu_5578_p1 = add_ln43_27_fu_5572_p2;

assign zext_ln43_2_fu_5281_p1 = add_ln43_fu_5275_p2;

assign zext_ln43_30_fu_5589_p1 = add_ln43_28_fu_5583_p2;

assign zext_ln43_31_fu_5600_p1 = add_ln43_29_fu_5594_p2;

assign zext_ln43_32_fu_5611_p1 = add_ln43_30_fu_5605_p2;

assign zext_ln43_33_fu_5622_p1 = add_ln43_31_fu_5616_p2;

assign zext_ln43_34_fu_5633_p1 = add_ln43_32_fu_5627_p2;

assign zext_ln43_35_fu_5644_p1 = add_ln43_33_fu_5638_p2;

assign zext_ln43_36_fu_5655_p1 = add_ln43_34_fu_5649_p2;

assign zext_ln43_37_fu_5666_p1 = add_ln43_35_fu_5660_p2;

assign zext_ln43_38_fu_5677_p1 = add_ln43_36_fu_5671_p2;

assign zext_ln43_39_fu_5688_p1 = add_ln43_37_fu_5682_p2;

assign zext_ln43_3_fu_5292_p1 = add_ln43_1_fu_5286_p2;

assign zext_ln43_40_fu_5699_p1 = add_ln43_38_fu_5693_p2;

assign zext_ln43_41_fu_5710_p1 = add_ln43_39_fu_5704_p2;

assign zext_ln43_42_fu_5721_p1 = add_ln43_40_fu_5715_p2;

assign zext_ln43_43_fu_5732_p1 = add_ln43_41_fu_5726_p2;

assign zext_ln43_44_fu_5743_p1 = add_ln43_42_fu_5737_p2;

assign zext_ln43_45_fu_5754_p1 = add_ln43_43_fu_5748_p2;

assign zext_ln43_46_fu_5765_p1 = add_ln43_44_fu_5759_p2;

assign zext_ln43_47_fu_5776_p1 = add_ln43_45_fu_5770_p2;

assign zext_ln43_48_fu_5787_p1 = add_ln43_46_fu_5781_p2;

assign zext_ln43_49_fu_5798_p1 = add_ln43_47_fu_5792_p2;

assign zext_ln43_4_fu_5303_p1 = add_ln43_2_fu_5297_p2;

assign zext_ln43_50_fu_5809_p1 = add_ln43_48_fu_5803_p2;

assign zext_ln43_51_fu_5820_p1 = add_ln43_49_fu_5814_p2;

assign zext_ln43_52_fu_5831_p1 = add_ln43_50_fu_5825_p2;

assign zext_ln43_53_fu_5842_p1 = add_ln43_51_fu_5836_p2;

assign zext_ln43_54_fu_5853_p1 = add_ln43_52_fu_5847_p2;

assign zext_ln43_55_fu_5864_p1 = add_ln43_53_fu_5858_p2;

assign zext_ln43_56_fu_5875_p1 = add_ln43_54_fu_5869_p2;

assign zext_ln43_57_fu_5886_p1 = add_ln43_55_fu_5880_p2;

assign zext_ln43_58_fu_5897_p1 = add_ln43_56_fu_5891_p2;

assign zext_ln43_59_fu_5908_p1 = add_ln43_57_fu_5902_p2;

assign zext_ln43_5_fu_5314_p1 = add_ln43_3_fu_5308_p2;

assign zext_ln43_60_fu_5919_p1 = add_ln43_58_fu_5913_p2;

assign zext_ln43_61_fu_5930_p1 = add_ln43_59_fu_5924_p2;

assign zext_ln43_62_fu_5941_p1 = add_ln43_60_fu_5935_p2;

assign zext_ln43_63_fu_5952_p1 = add_ln43_61_fu_5946_p2;

assign zext_ln43_64_fu_5963_p1 = add_ln43_62_fu_5957_p2;

assign zext_ln43_65_fu_5974_p1 = add_ln43_63_fu_5968_p2;

assign zext_ln43_66_fu_5985_p1 = add_ln43_64_fu_5979_p2;

assign zext_ln43_67_fu_5996_p1 = add_ln43_65_fu_5990_p2;

assign zext_ln43_68_fu_6007_p1 = add_ln43_66_fu_6001_p2;

assign zext_ln43_69_fu_6018_p1 = add_ln43_67_fu_6012_p2;

assign zext_ln43_6_fu_5325_p1 = add_ln43_4_fu_5319_p2;

assign zext_ln43_70_fu_6029_p1 = add_ln43_68_fu_6023_p2;

assign zext_ln43_71_fu_6040_p1 = add_ln43_69_fu_6034_p2;

assign zext_ln43_72_fu_6051_p1 = add_ln43_70_fu_6045_p2;

assign zext_ln43_73_fu_6062_p1 = add_ln43_71_fu_6056_p2;

assign zext_ln43_74_fu_6073_p1 = add_ln43_72_fu_6067_p2;

assign zext_ln43_75_fu_6084_p1 = add_ln43_73_fu_6078_p2;

assign zext_ln43_76_fu_6095_p1 = add_ln43_74_fu_6089_p2;

assign zext_ln43_77_fu_6106_p1 = add_ln43_75_fu_6100_p2;

assign zext_ln43_78_fu_6117_p1 = add_ln43_76_fu_6111_p2;

assign zext_ln43_79_fu_6128_p1 = add_ln43_77_fu_6122_p2;

assign zext_ln43_7_fu_5336_p1 = add_ln43_5_fu_5330_p2;

assign zext_ln43_80_fu_6139_p1 = add_ln43_78_fu_6133_p2;

assign zext_ln43_81_fu_6150_p1 = add_ln43_79_fu_6144_p2;

assign zext_ln43_82_fu_6161_p1 = add_ln43_80_fu_6155_p2;

assign zext_ln43_83_fu_6172_p1 = add_ln43_81_fu_6166_p2;

assign zext_ln43_84_fu_6183_p1 = add_ln43_82_fu_6177_p2;

assign zext_ln43_85_fu_6194_p1 = add_ln43_83_fu_6188_p2;

assign zext_ln43_86_fu_6205_p1 = add_ln43_84_fu_6199_p2;

assign zext_ln43_87_fu_6216_p1 = add_ln43_85_fu_6210_p2;

assign zext_ln43_88_fu_6227_p1 = add_ln43_86_fu_6221_p2;

assign zext_ln43_89_fu_6238_p1 = add_ln43_87_fu_6232_p2;

assign zext_ln43_8_fu_5347_p1 = add_ln43_6_fu_5341_p2;

assign zext_ln43_90_fu_6249_p1 = add_ln43_88_fu_6243_p2;

assign zext_ln43_91_fu_6260_p1 = add_ln43_89_fu_6254_p2;

assign zext_ln43_92_fu_6271_p1 = add_ln43_90_fu_6265_p2;

assign zext_ln43_93_fu_6282_p1 = add_ln43_91_fu_6276_p2;

assign zext_ln43_94_fu_6293_p1 = add_ln43_92_fu_6287_p2;

assign zext_ln43_95_fu_6304_p1 = add_ln43_93_fu_6298_p2;

assign zext_ln43_96_fu_6315_p1 = add_ln43_94_fu_6309_p2;

assign zext_ln43_97_fu_6326_p1 = add_ln43_95_fu_6320_p2;

assign zext_ln43_9_fu_5358_p1 = add_ln43_7_fu_5352_p2;

assign zext_ln43_fu_6331_p1 = j_0_reg_4019;

assign zext_ln58_fu_6466_p1 = j1_0_reg_4090;

assign zext_ln62_fu_6471_p1 = j2_0_reg_4125;

assign zext_ln64_fu_6486_p1 = j2_0_reg_4125;

assign zext_ln86_fu_6354_p1 = distance_0_i_reg_4054;

assign zext_ln87_1_fu_6369_p1 = xor_ln87_fu_6363_p2;

assign zext_ln87_2_fu_6374_p1 = bitcount_q0;

assign zext_ln87_fu_6348_p1 = i_0_i_reg_4043;

always @ (posedge ap_clk) begin
    zext_ln43_reg_9038[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    curr_size_reg_9085[0] <= 1'b0;
end

endmodule //knn
